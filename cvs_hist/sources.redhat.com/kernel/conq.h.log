
RCS file: /cvs/xconq/xconq/kernel/conq.h,v
Working file: conq.h
head: 1.68
branch:
locks: strict
access list:
symbolic names:
	xconq-7_4_1-release: 1.35
	xconq-7_4-branch: 1.35.0.2
	xconq-7_4-branchpoint: 1.35
	xtconq-pre-removal: 1.22
	xconq-7_3_3-release: 1.16
	xconq-7_3_2-release: 1.16
	xconq-7_3_1-release: 1.16
	xconq-7_3-branch: 1.16.0.2
	xconq-7_3-branchpoint: 1.16
keyword substitution: kv
total revisions: 68;	selected revisions: 68
description:
----------------------------
revision 1.68
date: 2004/07/06 22:49:08;  author: ronne;  state: Exp;  lines: +0 -3
Simplify the hit-unit task code.
----------------------------
revision 1.67
date: 2004/07/06 02:43:58;  author: mcdonald;  state: Exp;  lines: +1 -1
Disable another compiler warning.
Clean up a horde of warnings.
----------------------------
revision 1.66
date: 2004/06/20 17:23:05;  author: mcdonald;  state: Exp;  lines: +8 -0
Cache results of recently added ACP and MP artithmetic functions.
Finish replacing 'u_acp' and 'u_speed' calls in the kerenl, where appropriate.
Minor fix to the help system.
New option for Wreckreation.
----------------------------
revision 1.65
date: 2004/06/19 21:53:13;  author: mcdonald;  state: Exp;  lines: +3 -0
Transplant type-based ACP computations to more ubiquitously cited files.
Make a substitute implementation of 'offsetof' more widely available.
More improvements to the help system.
Add a TODO note regarding ACP computations.
----------------------------
revision 1.64
date: 2004/06/15 04:14:21;  author: mcdonald;  state: Exp;  lines: +1 -1
Update player documentation.
Extend night and occupant effects on ACP.
Provide universal ACP arithmetic.
Update games in library to use some replacement tables.
Provide true capture prevention/allowance tables.
Provide toggle for use of combat protection tables in capture computations.
Allow units to change type on capture. Add new table for this.
Improvements and modifications to help system.
Improvements to and comments about type changing code.
Some housekeeping of the table definitions.
Source formatting improvments.
New version of Wreckreation.
----------------------------
revision 1.63
date: 2004/05/02 22:19:18;  author: mcdonald;  state: Exp;  lines: +3 -43
Revert to the pathfinder in use prior to 2003/11/13.
Add appropriate replacements for useful elements of post-2003/11/13 pathfinder.
----------------------------
revision 1.62
date: 2004/04/24 06:40:53;  author: mcdonald;  state: Exp;  lines: +0 -12
Update documentation.
Transplant a couple of macros to a different header.
Write comments mentioning new direct treasury access capabilities.
Support direct treasury access in run_economy and unit base consumption.
Safen a macro.
----------------------------
revision 1.61
date: 2004/04/21 03:49:29;  author: mcdonald;  state: Exp;  lines: +12 -0
Change usage of um_to_create to mirror um_to_build.
Allow direct consumption of materials from treasury sans storage in unit.
Fix bug that prevented unit creation in a certain case.
Reformat some code and comments to be readable on 80 col display.
Update games lib to reflect change in um_to_create usage.
Add another octal escape for a special Tcl character.
----------------------------
revision 1.60
date: 2004/02/15 10:45:55;  author: ronne;  state: Exp;  lines: +1 -0
Fix some minor build problems.
----------------------------
revision 1.59
date: 2004/01/19 21:07:36;  author: mcdonald;  state: Exp;  lines: +2 -0
Improve victim rating computation.
Improve performance of non-networked games.
Add new macro routines for debugging.
Add new search algorithm.
----------------------------
revision 1.58
date: 2004/01/16 06:33:10;  author: mcdonald;  state: Exp;  lines: +7 -0
Unify victim finding for capturing, firing, and attacking.
Make new victim finder the one and only.
Fix bug in UI move-to checking.
----------------------------
revision 1.57
date: 2004/01/10 20:49:10;  author: mcdonald;  state: Exp;  lines: +3 -1
Add new files for general AI/UI utility functions.
Start adding more AI-related functions to "ai_" namespace.
Include 'assert.h' in a master header instead of various and sundry sources.
Rewrite 'could_hit' in terms of new functions.
Begin migrating general AI/UI utility functions to 'aiutil'.
Create some new general AI/UI utility functions in 'aiutil'.
Improve victim finder by rejecting unreachable targets.
----------------------------
revision 1.56
date: 2004/01/05 23:36:37;  author: ronne;  state: Exp;  lines: +1 -0
Add pre-flight checks of move commands to the ui code.
----------------------------
revision 1.55
date: 2003/12/26 09:51:48;  author: ronne;  state: Exp;  lines: +1 -2
Fix some build problems.
----------------------------
revision 1.54
date: 2003/12/26 06:02:35;  author: mcdonald;  state: Exp;  lines: +2 -1
Rewritten victim-finding code for the AI.
The start of better resupply logic.
Improve and add some segfault prevention code.
Cosmetic improvements to some code.
Enhancements to Bellum Aeternum.
----------------------------
revision 1.53
date: 2003/12/24 03:43:13;  author: ronne;  state: Exp;  lines: +4 -0
Fixes to mplayer sync bug and ai toggling code.
----------------------------
revision 1.52
date: 2003/12/14 03:37:47;  author: ronne;  state: Exp;  lines: +2 -3
Add support for network games in file saving code.
----------------------------
revision 1.51
date: 2003/11/29 06:25:04;  author: mcdonald;  state: Exp;  lines: +6 -2
Patch from Peter Garrone (modified) to better handle transports and b-slides.
----------------------------
revision 1.50
date: 2003/11/15 00:20:43;  author: ronne;  state: Exp;  lines: +0 -1
Improve module loading and patching code.
----------------------------
revision 1.49
date: 2003/11/13 21:18:48;  author: ronne;  state: Exp;  lines: +39 -2
New path-finding code from Peter Garrone.
----------------------------
revision 1.48
date: 2003/10/18 16:59:40;  author: ronne;  state: Exp;  lines: +1 -0
Overhaul of material handling code.
----------------------------
revision 1.47
date: 2003/10/06 00:10:11;  author: ronne;  state: Exp;  lines: +2 -0
Fix bugs in checkpoint preferences.
----------------------------
revision 1.46
date: 2003/08/24 22:53:31;  author: ronne;  state: Exp;  lines: +3 -0
Improvements to interfaces and the ai construction code.
----------------------------
revision 1.45
date: 2003/03/02 13:17:09;  author: ronne;  state: Exp;  lines: +2 -0
Update feature legends at the start of each turn.
----------------------------
revision 1.44
date: 2003/01/18 16:41:15;  author: ronne;  state: Exp;  lines: +27 -15
Update Doxygen comments.
----------------------------
revision 1.43
date: 2002/09/21 21:31:32;  author: ronne;  state: Exp;  lines: +1 -0
Fixes to the research display code.
----------------------------
revision 1.42
date: 2002/08/13 15:04:22;  author: ronne;  state: Exp;  lines: +1 -1
Enable Remove Side button. Fix randomized subimages code.
----------------------------
revision 1.41
date: 2002/08/09 10:11:35;  author: ronne;  state: Exp;  lines: +1 -0
Improvements to the tcltk startup dialogs.
----------------------------
revision 1.40
date: 2002/08/04 19:04:31;  author: ronne;  state: Exp;  lines: +1 -0
Improve handling of player names.
----------------------------
revision 1.39
date: 2002/07/31 20:40:08;  author: ronne;  state: Exp;  lines: +56 -16
Add Doxygen comments to kernel includes.
----------------------------
revision 1.38
date: 2002/07/21 22:15:24;  author: ronne;  state: Exp;  lines: +0 -1
More ai bug fixes.
----------------------------
revision 1.37
date: 2002/07/20 13:55:01;  author: ronne;  state: Exp;  lines: +1 -0
Improve handling of self units.
----------------------------
revision 1.36
date: 2002/05/08 23:51:16;  author: ronne;  state: Exp;  lines: +3 -3
Make sources C++ compatible.
----------------------------
revision 1.35
date: 2000/12/08 17:10:10;  author: shebs;  state: Exp;  lines: +11 -5
	Add player feedback for out-of-ammo and other action failures.
	(Still missing Mac interface version, more complicated because
	of multi-unit selections.)
	* history.def (zz-undefined): New hevt type, flag value.
	(insufficient-ammo): New hevt type, distinguishes missing
	ammo from other types of missing material.
	* combat.c (check_attack_action, check_overrun_action,
	check_fire_at_action, check_fire_into_action): Return
	A_ANY_NO_AMMO instead of A_ANY_NO_MATERIAL
	* nlang.c (action_result_desc): Add case for A_ANY_NO_AMMO,
	improve the default case.
	(advance_failure_desc): New function, describes reason for
	failure to advance into a cell.
	* conq.h (advance_failure_desc): Declare.
	* ui.c (advance_into_cell): Add failure code argument, rewrite
	cases to use it.
	* ui.h (advance_into_cell): Update decl.

	* maccmd.c (do_one_dir_move): Add argument to advance_into_cell.
	* macmouse.c (move_the_selected_unit): Ditto.
	* tkcmd.c (aux_move_dir): Ditto, plus notify of failure reason.
	* tkmap.c (move_the_selected_unit): Ditto.
	* cconq.c (do_dir_2): Ditto.
----------------------------
revision 1.34
date: 2000/11/27 16:32:23;  author: shebs;  state: Exp;  lines: +1 -0
	* conq.h (ai_type_name): Declare here instead of in ai.h
----------------------------
revision 1.33
date: 2000/11/27 15:34:18;  author: shebs;  state: Exp;  lines: +0 -24
Don't forget this one!
----------------------------
revision 1.32
date: 2000/11/26 00:33:47;  author: ronne;  state: Exp;  lines: +38 -1
General cleanup of kernel prototypes - part 5.
----------------------------
revision 1.31
date: 2000/11/24 06:12:12;  author: kingdon;  state: Exp;  lines: +1 -1
	* tp.h, conq.h, history.h, lisp.h, plan.c, unit.h, utype.def: Add
	newline to end of file (shuts up GCC warnings on unix).
----------------------------
revision 1.30
date: 2000/11/24 01:17:18;  author: ronne;  state: Exp;  lines: +8 -0
General cleanup of kernel prototypes - part 3.
----------------------------
revision 1.29
date: 2000/11/16 23:33:12;  author: ronne;  state: Exp;  lines: +37 -0
General cleanup of kernel prototypes - part 2.
----------------------------
revision 1.28
date: 2000/11/12 00:39:53;  author: ronne;  state: Exp;  lines: +68 -189
General cleanup of kernel prototypes - part 1.
----------------------------
revision 1.27
date: 2000/11/06 21:58:46;  author: ronne;  state: Exp;  lines: +9 -1
Massive cleanup of prototypes.
----------------------------
revision 1.26
date: 2000/11/05 20:09:15;  author: shebs;  state: Exp;  lines: +1 -1
	Rework recent textual formatting changes.
	* nlang.c, conq.h (capitalize): New function.
	* nlang.c (notify_all, etc): Use it.
	(short_side_title_plural_p, apparent_unit_handle, etc): Remove
	wired-in capitalization.
	(apparent_unit_handle): Test for NULL side2 explicitly.
	(short_unit_handle): Handle all the name/number cases better.
	(medium_long_unit_handle): Remove indepside case, no longer needed.
	(feature_desc): Rename local var to avoid conflict.
	(task_desc): Add description of capture tasks.
	* ui.c: Remove unused decl of apparent_unit_handle.
	* macunit.c (create_unit_closeup): Capitalize menu item.
	* tkmain.c (draw_unit_info): Capitalize unit handle.

	* nlang.c, conq.h (short_past_unit_handle): Remove, never used.
----------------------------
revision 1.25
date: 2000/10/29 21:10:37;  author: ronne;  state: Exp;  lines: +5 -0
Improve ai planning. More support for combat model 1.
----------------------------
revision 1.24
date: 2000/10/23 01:41:35;  author: ronne;  state: Exp;  lines: +3 -1
Various bug fixes and improvements.
----------------------------
revision 1.23
date: 2000/09/03 22:46:02;  author: shebs;  state: Exp;  lines: +6 -0
	General overhaul and cleanup of networking support, including
	fixed command-line -host/-join handling and ability to load
	a module directly instead of sending across the net.
	* cmdline.c (game_chosen): Remove, no longer used.
	(parse_command_line): Name -h <n> players as "?@" instead of "x@",
	remove warning messages.
	(set_players_from_options): Update remote programs with info
	about players.
	* init.c, conq.h (start_game_load_stage,
	start_variant_setup_stage, start_player_pre_setup_stage,
	start_player_setup_stage, start_game_ready_stage): New functions,
	control over game setup stages.
	* side.c: Add a couple comments.
	* socket.c (wait_for): Comment out excessive output.
	* tp.c (add_remote_players): Fill in existing players named "?"
	before creating new players.
	(net_update_player): New function.
	(download_game_module): Add case to download module name only.
	(broadcast_start_variant_setup, broadcast_start_player_setup):
	New functions.
	(send_packet): Change timeout warning to a notice.
	(receive_data): Dump no-op loop counts once/second only.
	(receive_packet): Handle new stage start packets.
	(receive_game_checksum): Notify instead of warn about checksum
	failures.
	(receive_assignment_setting): Handle player spec packet.
	* tp.h: Declare new functions.

	* tkconq.tcl (master_rid): New global, use everywhere instead
	of assuming master's rid is 1.
	(set_variant): Change stage only if master.
	(update_player_entry, update_allplayer_buttons): Don't run if
	no dialog.
	(popup_chat): Handle mid-game first-time popup correctly.
	* tkinit.c: (init_ui): Handle repeated calls.
	* tkmain.c (TclCmdFn): New function typedef, use for all
	tcl commands.
	(tcl_cmd): New function.
	(initial_ui_init): Use to set up all generic tcl commands.
	(tk_start_player_setup_stage): New tcl command.
	(add_remote_locally): Set master_rid.
	(launch_game_2): Merge into launch_game.

	* xconq.c (main): Reorganize to handle command-line and
	interactive setup more uniformly.
----------------------------
revision 1.22
date: 2000/08/20 20:25:05;  author: ronne;  state: Exp;  lines: +0 -2
More changes to construction and research.
----------------------------
revision 1.21
date: 2000/08/15 16:11:32;  author: shebs;  state: Exp;  lines: +1 -1
	Make still more commands generic.
	* cmd.c (do_reserve, do_one_reserve, do_return, do_one_return,
	do_sleep, do_one_sleep, do_take, do_one_take): New functions,
	adapted from interface-specific versions.
	* ccmd.c, maccmd.c, macconq.h, tkcmd.c: Remove interface-specific
	versions of these.

	* cmd.c (do_give): Test for material types.
	(do_one_give): Call report_give.
	(do_release): Add more validity tests and more feedback.
	* nlang.c, conq.h (make_text): Remove, no longer used.
	(report_give): New function.
	* ui.c, ui.h (give_supplies): Return recipient of supplies,
	add more searching for units to give to.
	(advance_into_cell): Simplify structure slightly.
----------------------------
revision 1.20
date: 2000/08/08 17:11:52;  author: shebs;  state: Exp;  lines: +4 -2
	* nlang.c (tooling_desc): New function.
	(notify_doctrine): List contents of all doctrines.
	(notify_doctrine_1): List construction run lengths.
	* plan.c (est_completion_time): Move to here from nlang.c.
	* read.c (read_default_doctrine): Rename from read_general_doctrine,
	don't try to handle property values here.
	(read_utype_doctrine): Similarly.
	(utype_from_name): Handle empty strings.
	* read2.c (interp_utype_list): Move to here from unit.c.
	* side.h (Side numlive): Remove field, never used.
	(for_all_doctrines): New macro.
	* side.c (init_sides): Set next_doctrine_id to 1, so save/restore
	doesn't get confused.
	(create_side): Don't alloc space for numlive.
	(become_designer): Don't enable may_set_show_all if see_all.
	(cover_area): Test side->see_all instead of g_see_all.
	(new_doctrine): Ensure new doctrine has unique id.
	(clone_doctrine): Comment out, never used.
	* unit.c (set_unit_side): Remove adjust of numlive.
	(find_unit_name): Remove, unused and useless.
	(num_occupants, num_units_at, get_x_property_by_name): Comment
	out, never used.
	* write.c: Cosmetic improvements.
	* conq.h, unit.h: Update to reflect movements.
----------------------------
revision 1.19
date: 2000/07/30 13:06:43;  author: ronne;  state: Exp;  lines: +6 -3
Cache research and build vectors, make ai resignation optional.
----------------------------
revision 1.18
date: 2000/07/05 16:20:05;  author: shebs;  state: Exp;  lines: +2 -1
	* run2.c, conq.h (area_lighting): New global.
	(daynight): Change to int.
	* keyword.def (unit-views): New keyword, replaces unit-view.
	* table.def (see-chance, etc): Remove upper bounds on values.
	* read.c (interp_unit_views): New function.
	(fill_in_side): Call it.
	* run2.c (compute_season): Add day/night note to curdatestr.
	(run_sun): Recognize when area's lighting is uniform, tell
	users about rising and setting of sun, also recompute cover.
	* side.c (suppress_see_cell): New global.
	(cover_area_1): Use it to skip see_cell calls sometimes.
	(reset_coverage): Set it.
	(calc_coverage): Simplify, account for controlled sides.
	(see_cell): Rewrite see-chance handling.
	(test_for_successful_viewer): Rename from test_for_viewer.
	(test_for_possible_viewer): Rename from test_for_mistaken_viewer.
	* write.c (write_side_view): Use new keyword.
----------------------------
revision 1.17
date: 2000/06/24 17:35:33;  author: ronne;  state: Exp;  lines: +1 -0
Add clickable occupants in mac unit closeups.
----------------------------
revision 1.16
date: 2000/06/04 16:19:03;  author: shebs;  state: Exp;  lines: +0 -4
	More rewriting of variant handling and player setup.
	* keyword.def (indepside-has-ai, indepside-can-build,
	indepside-can-research, indepside-has-treasury): Comment out,
	will no longer define as variants.
	* ai.c, ai.h (next_ai_type_name): Rename from next_ai_type.
	(find_ai_type): New function.
	* cmdline.c (unixify_variant_name): Remove.
	(game_usage_info): Use variant ids as argument names.
	* kernel.h (set_ai_for_player, etc): Move here from conq.h.
	* init.c (make_up_a_side): Remove set of ingame, redundant.
	(set_ai_for_player): Warn about invalid AI types.
	* iplayer.c, mplayer.c: Remove decls now in ai.h.
	* kpublic.h: Rearrange some decls.
	* module.c (do_one_variant): Remove indepside variants.
	* read.c (force_all_variants): New global.
	(add_std_var): New function.
	(interp_variant_defns): Rewrite to use it for all variant
	setup.
	(add_more_variants): Remove, no longer needed.
	(interp_game_module): Call interp_variant_defns.
	* run.c (init_movement): Simplify code.
	* score.c (eval_sk_last_side_wins, eval_sk_last_alliance_wins):
	Don't require indepside to lose.
	(record_into_scorefile): Use a switch statement for variants.
	(score_variant_desc): Remove indepside variants.

	* macinit.c (interpret_variants, implement_variants): Remove
	indepside variants.
	(hit_player_setup_dialog): Use net_exchange_players.

	* tkconq.tcl (add_variants_dialog_items): Wrap help text by
	words.
	(add_player_dialog_items): Always create indepside entry but
	conditionalize packing, add indepside button, improve test of
	random/sidelib name button enabling.
	(popup_indepside, ok_indepside): New procs.
	* tkinit.c (init_display): Seed indepside globals.
	* tkmain.c (tk_set_indepside_options): New tcl command.
	(tk_set_ai_for_player): Interpret AI name passed directly.
	(interpret_variants): Remove indepside variants.
----------------------------
revision 1.15
date: 2000/04/24 12:59:18;  author: shebs;  state: Exp;  lines: +1 -0
	* nlang.c, conq.h (point_value_desc): New function.
----------------------------
revision 1.14
date: 2000/04/07 17:19:35;  author: shebs;  state: Exp;  lines: +2 -1
	* ai.c (next_ai_type): Simplify.
	* conq.h (has_advance_to_research): Declare here.
	* cmd.c, run.c, macunit.c, macwins.c: ...instead of here.
	* combat.c: Cosmetic changes.
	* iplayer.c: Remove more unused code, elim warnings.
	* mplayer.c (mp_collect_here): Declare.
	* plan.c: Comment out unused code.
	* supply.c: Remove unused globals.
----------------------------
revision 1.13
date: 2000/02/06 21:54:50;  author: ronne;  state: Exp;  lines: +3 -1
Various mac interface improvements.
----------------------------
revision 1.12
date: 1999/12/01 04:05:04;  author: shebs;  state: Exp;  lines: +54 -52
	* conq.h: Rearrange randomly. :-)
	* misc.h: Remove ANSI_PROTOTYPES stuff.
----------------------------
revision 1.11
date: 1999/11/18 03:30:11;  author: shebs;  state: Exp;  lines: +0 -1
	* nlang.c (exit_commentary): Remove, no longer interesting.
	* conq.h (exit_commentary): Remove decl.
	* cconq.c (exit_cconq): Remove call to exit_commentary.
	* xtconq.c (exit_xconq): Ditto.
	* tkmain.c (exit_xconq): Ditto, also remove get_scores call.
----------------------------
revision 1.10
date: 1999/11/14 21:53:44;  author: shebs;  state: Exp;  lines: +0 -1
	* conq.h (interfacestatesafe): Remove decl, never changes.
	* macconq.c (interfacestatesafe): Remove, never changes.
	* macmenus.c (quit_the_game): Remove ref to interfacestatesafe.
----------------------------
revision 1.9
date: 1999/10/30 14:41:46;  author: shebs;  state: Exp;  lines: +7 -1
        * combat.c (mobile_enemy_thread): Use side_sees_image instead of
        unit_actually_visible.
        * run.c (auto_pick_new_build_task, etc): Ditto.
        * task.c: Ditto.
        * side.c (side_sees_unit): Add side->see_all case, remove
        designer and debugging cases.
        (side_sees_image): Error if NULL side, add view-matching case.
        * ui.c (unit_actually_visible): Comment out.
        (unit_visible, occupants_visible): New function.
        (cell_terrain): Remove, fold code into oneliner.
        (oneliner): Test vp->show_all.
        * ui.h: Declare new functions.

        * conq.h (gameinited, warnings_logged): Declare.
        (add_remote_players, etc): Ditto.
        * cmd.c, cmdline.h, init.c, read.c, read2.c, side.c, unit.c,
        util.c: Remove unneeded decls.
        * misc.h (log_warning): Declare.
----------------------------
revision 1.8
date: 1999/09/18 00:18:46;  author: shebs;  state: Exp;  lines: +7 -4
	* conq.h (enum setup_stage): Rename stages, add game_load_stage.
	* init.c (make_trial_assignments): Add remote players.
	* system.h (close_remote_connection): Add argument.
	* tp.c (remote_player_specs): New global array.
	(add_remote_players): New function.
	(download_to_player): Comment out launch packet send.
	(download_game_module): Use gameModule instead of GameModule.
	(broadcast_variants_chosen): Send randstate first.
	(receive_packet): Change 'G' packet to 'g', comment out 'L'
	packet, adjust stage names.
	(receive_remote_program): Record remote player spec.

	* tkconq.tcl (popup_game_dialog): Remove Network button.
	(toggle_remote_cmd): Remove.
	(select_player): Remove remote button.
	(popup_chat): Rename from popup_pregame_chat, allow deiconify,
	disable splash dialog buttons when brought up, put both host
	and join buttons at top.
	(my_rid): New global.
	(add_program): Disable connection buttons, activate New/Open
	buttons for host.
	(insert_chat_string): Allow arg of 0 to do generic inserts.
	(create_map_menus): Add chat item to file menu.
	(adjust_file_menu): New proc.
	* tkmain.c (tk_launch_game): Set stage, make trial assignments
	after broadcasting that variants chosen.
	(tk_launch_game_2): Call launch_game_2.
	(check_network): Adjust stage names.

	* xconq.c (main): Simplify startup sequence.
	(host_the_game): Fill in spec of host.
	(launch_game_2): New function.
----------------------------
revision 1.7
date: 1999/09/16 02:47:45;  author: shebs;  state: Exp;  lines: +9 -1
	* conq.h, init.c, module.c, tp.c (typesdefined): Remove, never
 	actually used.

	* conq.h (enum setup_stage): New enum.
	(current_stage): New global.

	* imf.c, imf.h (get_img): Remove unused argument.
	* imf.c, ui.c, xcutil.c, ximf.c, maccolors.c, macimf.c, macinit.c,
 	tkimf.c: Fix all callers.

	* init.c, mac.c, mkrivers.c, mkroads.c, module.c. ps.c, score.c,
 	task.c: Remove PARAMS usages.

	* mac.c, win32.c (tmprid): Remove decl, never used.
	* cconq.c (hosting): Remove decl, never used.

	* tp.c (download_game_module): New function, split out from
	download_to_player.
	(broadcast_game_module): New function.
	(broadcast_variants_chosen, broadcast_players_assigned): New
 	functions.
	(receive_packet): Don't do trial assignments here, interpret
	'a' and 'v' packets.

	* tkconq.tcl (selected_game_title): Init to a default value.
	* tkmain.c (tk_start_new_game): Broadcast game module to other
	programs.
	(tk_launch_game): Broadcast that variants have been chosen.
	(tk_launch_game_2): Broadcast that players have been assigned.
	(last_stage): New global.
	(check_network): Call tcl commands to move dialogs through
	stages of game setup.
----------------------------
revision 1.6
date: 1999/09/05 17:25:03;  author: ronne;  state: Exp;  lines: +3 -0
Rewrite new ai code. Fix various other bugs.
----------------------------
revision 1.5
date: 1999/08/28 23:22:44;  author: shebs;  state: Exp;  lines: +303 -303
        * configure.in: Add --enable-build-warnings to control extra
        warnings, choose which subdirs to configure based on Unix vs
        Windows.
        * configure: Regenerate.
        * Makefile.in: Eliminate refs to lib-x11.
        * x11/Makefile.in: Ditto.
        * curses/Makefile.in, kernel/Makefile.in, tcltk/Makefile.in,
        x11/Makefile.in: Change UNIX_CFLAGS to autoconf-using HFLAGS,
        remove WARNING_CFLAGS.
        * actions.c, ai.c, ai.h, cmdline.c, cmdline.h, conq.h, generic.c,
        help.h, imf.c, imf.h, imf2imf.c, lisp.c, lisp.h, misc.h, system.h,
        imf2x.c, xcutil.h: Remove PARAMS usages.
        * gif.c, help.c, imf.c, imf2imf.c, lisp.c, unix.c, tkmain.c,
        wimfapp.c, imf2x.c, x2imf.c, xconq.c, xcutil.c: Remove unused
        variables, add prototypes, etc.
        * run2.c, side.c, macconq.c: Remove decl of update_area_display.
        * skelconq.c: Declare _dialog functions.
        * tkcmd.c: Remove exit_xconq decl.
        * wconq.c (check_player_displays): Remove uses.
        * xconq.c: Include tkconq.h.

        * tkconq.h (IMFLIB): Remove.
        (exit_xconq): Declare.
        * tkimf.c, tkinit.c: Remove imflib uses.
        * xconq.h, xcutil.c: Ditto.
        * ximf.c, xinit.c: Ditto.
        * PROJECTS: Remove lib-x11 item.
----------------------------
revision 1.4
date: 1999/08/12 03:04:28;  author: shebs;  state: Exp;  lines: +0 -1
	* conq.h: Don't include ai.h.
	* ai.c, init.c, mplayer.c, run.c, ui.c: Include ai.h explicitly.
	* ai.c (defensive_worth, siege_worth): Remove unused vars.
	* init.c (check_game_validity): Ditto.
----------------------------
revision 1.3
date: 1999/07/03 12:43:45;  author: ronne;  state: Exp;  lines: +0 -17
Clean up file, remove old change markers.
----------------------------
revision 1.2
date: 1999/06/01 19:39:39;  author: shebs;  state: Exp;  lines: +22 -25
Tue Jun  1 18:41:59 1999  Hans Ronne  <ronne@bmc.uu.se>
	* combat.c, conq.h, game.h, help.c, init.c, keyword.def,
 	mkunits.c, move.c, mplayer.c, plan.def, read.c, run.c, run2.c,
 	score.c, side.h, supply.c, table.def, ui.c, unit.c, unit.h,
 	utype.def, world.c, world.h, write.c, maccmd.c, maccolors.c,
 	macconq.h, macdefs.h, macdraw.c, macinit.c. maclist.c, macmap.c,
 	macmenus.c, macmouse.c, macprefs.c, macrow.c. macwins.c: Remove
 	old change markers.
	* actions.c (transfer_supply): Disable use of indepside treasury.
	(do_create_in_action): Make separate call to has_advance_to_build.
	(do_create_in_action): Use the builders stash of cps if allowed.
	(do_create_in_action): Fix null side treasury crashes.
	(check_create_common): Make separate call to has_advance_to_build.
	(check_create_common): Fix null side treasury crashes.
	(set_created_unit_props): Turn on automation for indeps & AI
 	controlled sides.
	(do_create_at_action): Make separate call to has_advance_to_build.
	(do_create_at_action): Use the builders stash of cps if allowed.
	(do_create_at_action): Fix null side treasury crashes.
	(make_unit_complete): Fix null actionvector crashes at turn zero.
	(do_transfer_part_action): Make separate call to
 	has_advance_to_build.
	(check_change_type_action): Add separate call to
 	has_advance_to_build.
	* ai.c (numaitypes): Move to config.h to make it globally
 	accessible.
	(set_side_ai): Turn on automation for indeps & AI controlled
 	sides.
	(ai_update_plan): New function.
	(goal_truth): Handle GOAL_UNIT_OCCUPIED and GOAL_COLONIZE.
	(ai_init_shared): Call set_u_is_ground_mobile etc.
	(ai_init_shared): Set u_colonizer.
	(ai_init_shared): Call set_u_offensive_worth etc.
	(ai_init_shared): Set u_naval_mobile, u_ground_mobile and
 	u_facility.
	(offensive_worth): New function.
	(defensive_worth): New function.
	(exploring_worth): New function.
	(colonizing_worth): New function.
	(facility_worth): New function.
	(siege_worth): New function.
	(random_worth): New function.
	(set_u_offensive_worth): New function.
	(set_u_defensive_worth): New function.
	(set_u_explorer_worth): New function.
	(set_u_colonizer_worth): New function.
	(set_u_facility_worth): New unction.
	(set_u_random_worth): New function.
	(set_u_siege_worth): New function.
	(set_u_is_ground_mobile): New function.
	(set_u_is_naval_mobile): New function.
	(set_u_is_air_mobile): New function.
	(set_u_is_advanced): New function.
	(set_u_is_colonizer): New function.
	(set_u_is_facility): New function.
	* ai.h (a_ai_op): Add (*to_update_plan).
	(ai_update_plan): Prototype new function.
	(offensive_worth, defensive_worth, etc): New prototype.
	* combat.c (do_overrun_action): Make ovverun after fire possible.
	(check_overrun_action): Make overrun after fire & into empty cell
 	possible.
	(do_fire_at_action): Use SideMask code to handle fire display.
	(do_fire_at_action): Permit attempt to capture after fire from
 	adjacent cell.
	(do_fire_into_action): Use SideMask code to handle fire display.
	(maybe_hit_unit): Support uu_cellwide_protection_against.
	(maybe_hit_unit): Support uu_cellwide_protection_for.
	(maybe_hit_unit): Use SideMask code to handle hit display.
	(maybe_hit_unit): Fix occupant recursion bug.
	(attempt_to_capture_unit): Support uu_cellwide_protection_against.
	(attempt_to_capture_unit): Support uu_cellwide_protection_for.
	(detonate_on_cell): Use for_all_stack_with_occs instead of
 	for_all_stack.
	(can_capture_directly): New function.
	(type_can_capture_directly): New function.
	(type_can_carry): New function.
	(occ_can_defend_transport): New function.
	* config.h (MAXATYPES): Increase to 254.
	(numaitypes): Move here from ai.c to make it globally accessible.
	* conq.h (advanced_utypes etc): Remove.
	(numadv etc): Remove.
	(can_extract_at): Prototype.
	(can_load_at): Prototype.
	(can_capture_directly): Prototype.
	(type_can_capture_directly): Prototype.
	(type_can_carry): Prototype.
	(occ_can_defend_transport): Prototype.
	(has_advance_to_build): Prototype.
	(unit_actually_visible): New prototype.
	* game.h (for_all_advanced_utypes, etc): Remove.
	* goal.def (GOAL_UNIT_OCCUPIED, GOAL_COLONIZE): New goals.
	* gvar.def (g_default_runlength): New name for
 	g_ai_build_runlength.
	(g_disable_standard_economy): New gvar.
	(g_disband_unfinished_units): New gvar.
	(g_salvage_unfinished_cps): New gvar.
	(g_salvage_unfinished_materials): New gvar.
	(g_ai_advanced_unit_separation): New gvar.
	(g_ai_badtask_remove_chance): New gvar.
	(g_ai_badtask_max_retries): New gvar.
	(g_ai_badtask_reserve_chance): New gvar.
	(g_units_may_go_into_reserve): New gvar.
	(g_units_may_go_to_sleep): New gvar.
	* help.c (may_detonate): Prototype.
	(describe_utype): Make display of Material Handling conditional.
	(describe_utype): Add "None" option to required advances code.
	(u_property_desc, etc): Add spaces after commas to permit new
 	lines.
	(append_help_phrase): Add more dashes and an extra linefeed.
	* imf.c (interp_image): Disable palette run warning on the Mac.
	* init.c (advanced_utypes etc): Remove.
	(final_init): Remove call to setup_utype_vectors.
	(setup_utype_vectors): Remove function.
	* kernel.h (go_after_captive): New prototype.
	(attack_can_damage_or_capture): New prototype.
	(fire_can_damage_or_capture): New prototype.
	(real_capture_chance): New prototype.
	* keyword.def (K_AUTOPLAN): New keyword.
	(K_CP_STASH): New keyword.
	* kpublic.h (net_resume_build_task): New extern prototype.
	* mac.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	* mkunits.c (make_countries): Add separate call to
 	has_advance_to_build.
	(place_unit): Add separate call to has_advance_to_build.
	* move.c (do_move_action): Fix u2->nu2 typo & remove nu2
 	declaration.
	(do_enter_action): Fix u2->nu2 typo & remove nu2 declaration.
	* mplayer.c: Include kernel.h.
	(assign_to_defend_unit): Prototype new function.
	(assign_to_defend_cell): Prototype new function.
	(assign_to_defend_vicinity): Prototype new function.
	(mplayer_update_plan): Prototype new function.
	(defended_by_occupants): Prototype new function.
	(mplayer_ops): Add mplayer_update_plan.
	(update_unit_plans_randomly): Support g_units_may_go_into_reserve.
	(update_unit_plans_randomly): Support g_units_may_go_to_sleep.
	(mplayer_decide_plan): Skip for advanced units.
	(mplayer_decide_plan): Use u_colonizer_worth instead of
 	u_colonizer.
	(mplayer_update_plan): New function.
	(need_this_type_to_build_explorers): Check that we can build the
 	desired type.
	(assign_to_colonize): Rewrite. Use GOAL_COLONIZE and
 	PLAN_COLONIZING.
	(assign_to_improve): Clear task agenda and set NULL goal.
	(type_can_build_attackers): Check that we can build the desired
 	type.
	(type_can_build_colonizers): Add separate call to
 	has_advance_to_build.
	(type_can_build_colonizers): Use u_colonizer_worth instead of
 	u_colonizer.
	(preferred_build_type): Also count enemy occs by using
 	for_all_stack_with_occs.
	(preferred_build_type): Add separate call to has_advance_to_build.
	(preferred_build_type): Use u_colonizer_worth instead of
 	u_colonizer.
	(defended_by_occupants): New function.
	(assign_to_defense): Rewrite. Handle defense of units.
	(assign_to_defend_unit): New function.
	(assign_to_defend_cell): New function.
	(assign_to_defend_vicinity): New function.
	(assign_to_defend_theater): New function.
	(mplayer_adjust_plan): Skip for advanced units.
	(mplayer_adjust_plan): Add PLAN_COLONIZING & PLAN_IMPROVING.
	(mplayer_adjust_plan): Support g_units_may_go_into_reserve.
	(build_base_for_self): Check that we can build the desired type.
	(build_base_for_others): Check that we can build the desired type.
	(build_depot_for_self): Check that we can build the desired type.
	(rethink_plan): Support g_units_may_go_into_reserve.
	* plan.c: (execute_plan): Skip for advanced units.
	(execute_plan): Mark obsolete try code.
	(execute_plan): Support g_units_may_go_into_reserve.
	(execute_plan): Call ai_update_plan before execution.
	(plan_offense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_offense): Support g_units_may_go_into_reserve.
	(plan_offense): Support g_units_may_go_to_sleep.
	(self_build_base_for_self): Check that we can build the desired
 	type.
	(plan_offense_support): Check that we can build the desired type.
	(plan_defense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_defense): Call go_after_victim also for unit that can fire.
	(plan_defense): Use u_ai_tactical_range.
	(plan_defense): Support g_units_may_go_into_reserve.
	(plan_colonize): Rewrite. Use GOAL_COLONIZE.
	(plan_colonizer_support): Add separate call to
 	has_advance_to_build (2 times).
	(plan_colonizer_support): Use u_colonizer_worth instead of
 	u_colonizer.
 	(plan_improve): Add separate call to has_advance_to_build (2
 	times).
 	(good_cell_to_colonize): Rewrite. Check for presence of other
 	unit.  Check size goal for ALL advanced utypes. Remove check for
 	nearby enemy units.
	(plan_exploration): Support g_units_may_go_into_reserve.
	(plan_exploration): Handle GOAL_UNIT_OCCUPIED and
 	GOAL_CELL_OCCUPIED.
	(plan_exploration): Support g_units_may_go_to_sleep.
	(plan_explorer_support): Check that we can build the desired type.
	(victim_here): Also count with damage by fire and damage to occs.
	(victim_here): Give large size units higher rating.
	(victim_here): Give independent units lower rating.
	(victim_here): Give units that threaten our advanced units higher
 	rating.
	(go_after_captive): New function.
	(target_here): Also count with damage by fire and damage to occs.
	(target_here): Give large size units higher rating.
	(target_here): Give independent units lower rating.
	(target_here): Give units that threaten our advanced units higher
 	rating.
 	(capture_indep_if_nearby): Use u_ai_tactical_range.
 	(capture_useful_if_nearby): Use u_ai_tactical_range.
	* read.c (interp_unit): Restore code where ids start at 1 instead
 	of 0.
	(interp_unit): Add K_CP_STASH & K_AUTOPLAN.
	* run.c (unit_plan_dialog): New extern prototype.
	(net_resume_build_task): New extern prototype.
	(has_advance_to_research): New prototype.
	(select_by_weight): Prototype extern.
	(unit_build_dialog): Change prototype so that it returns int.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove function and prototype.
	(auto_pick_new_plan): New function and prototype.
	(set_new_build_task): Remove function and prototype.
	(run_advanced_units): Enable run_construction for UNIX again.
	(run_population): Fix indepside crashes.
	(run_construction): Completely rewritten & extensively debugged.
	(auto_pick_new_research): Rewrite so that random task is picked.
	(auto_pick_new_build_task): Rewrite. Call auto_pick_new_plan.
	(auto_pick_new_plan): New function.
	* run2.c (vary_winds): Prototype.
	(update_area_display): Prototype extern.
	(run_turn_start): Check g_disable_standard_economy.
	* side.c (update_area_display): Prototype extern.
	(create_side): Fix toggle AI bug by initializing
 	newside->prefixarg.
	(side_controls_unit): Give debuggers full control.
	(side_sees_unit): Include trusted side, debuggers, g_peek_at_enemy
 	and endofgame.
	* side.h (has_advance): Fix null side crashes.
	* table.def (uu_builder_can_reuse_cp): New table.
	(uu_cellwide_protection_against): New table.
	(uu_cellwide_protection_for): New table.
	* task.c (attack_can_damage_or_capture): Move prototype to
 	kernel.h.
	(do_hit_unit_task): Count with fire and capture at pointblank
 	range.
	(do_hit_unit_task): Fix firing range bug.
	(do_hit_unit_task): Move in to capture if unit is undefended.
	(attack_can_damage_or_capture): Do attack if occ can be damaged.
	(fire_can_damage): Do attack if occ can be damaged.
	(fire_can_damage_or_capture):New function.
	(real_capture_chance): New function.
	(execute_task): Support g_ai_badtask_remove_chance.
	(execute_task): Support g_ai_badtask_max_retries.
	(execute_task): Support g_ai_badtask_reserve_chance.
	(execute_task): Support g_units_may_go_into_reserve.
	(set_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(push_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(set_occupy_task): New function.
	* tp.c (net_resume_build_task): New function (prototyped in
 	kpublic.h).
	* ui.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	(xform_cell): Move core calculations to new function
 	xform_cell_flat.
	(xform_cell_flat): New function.
	(xform_cell_fractional_flat): New function.
	(favored_type): Check that we can build the desired type.
	* ui.h (xform_cell_flat, xform_cell_fractional_flat): New
 	prototypes.
	* unit.c (default_size): Change from 0 to 1.
	(has_advance_to_build): Remove prototype.
	(create_unit): Initialize unit->autoplan.
	(create_unit): Initialize unit->cp_stash.
	(can_carry): Check for u_facility_total_max & u_mobile_total_max.
	(type_can_occupy): Check for u_facility_total_max &
 	u_mobile_total_max.
	(type_allowed_on_side): Remove call to has_advance_to_build.
	(set_unit_side): Turn on autobuild & autoresearch if side is under
 	AI control.
	* unit.h (a_unit): Add unit->cp_stash.
	(a_unit): Add unit->autoplan.
	(for_all_occs_with_occs): Define new macro.
	(type_ever_available): Prototype extern.
	* utype.def (u_offensive_worth): New utype property.
	(u_defensive_worth): New utype property.
	(u_explorer_worth): New utype property.
	(u_colonizer_worth): New utype property.
	(u_facility_worth): New utype property.
	(u_random_worth): New utype property.
	(u_siege_worth): New utype property.
	(u_offensive): Change default from 1 to 0.
	(u_explorer): Change default from 1 to 0.
	(u_besieger): New utype property.
	(u_ship): New utype property.
	(u_ground): New utype property.
	(u_air): New utype property.
	(u_facility_total_max): New utype property.
	(u_mobile_total_max): New utype property.
	(u_ai_min_defenders) : Ner utype property.
	(u_ai_tactival_range): New utype property.
	* world.c (latlong_to_xy): Fix meridian drawing bug.
	* world.h (cell_is_within_n_steps): Rename to
 	cell_is_within_range.
	(for_all_cells_within_n_steps): Rename to
 	for_all_cells_within_range.
	(for_all_stack_with_occs): Define new macro.
	* write.c (write_area_users): Change so that nextid starts at 1
 	instead of 0.
	(write_units): Restore old code so that nextid starts at 1 instead
 	of 0.
	(write_unit_properties): Add K_AUTOPLAN & K_CP_STASH.
	* macadv.c: (MAX_DISPLAYED_FACS): New macro constant.
	(MAX_DISPLAYED_OCCS): New macro constant.
	(CLEAR_AGENDA): New macro constant.
	(unit_build_dialog): Change prototype.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove prototype.
	(copy_rect_from_gworld): New function and prototype.
	(city_dialog): Rewrite. Many bug fixes and improvements.
	Most important ones:  Add conditional call to draw_unit_info.
	Use backcolor to draw region outside the area in the city map.
	Use copy_rect_from_gworld to do the offscreen graphics.
	Disable all auto checkboxes when dside is under AI control.
	Check that unit has a plan. Add new Plan Type popup menu.
	Add new Autoplan checkbox. Add new AI control checkbox.
	Split occupant panel into facilities and garrison panels.
	Fix runlength bug and limit it to CLEAR_AGENDA.
	Call net_clear_task_agenda & net_set_unit_asleep for idle units.
	Add separate call to has_advance_to_build.
	(draw_city_statistics): Rewrite. Many bug fixes and improvements.
	Most important ones: Add drawing of unit icon.
	Fix sporadic name bug by call to side_adjective.
	Fix parenthesis bug in construction status field.
	Fix crashing bug in occupant display code.
	Use u_facility_worth instead of !mobile to identify facilities.
	Add AI control info text field.	 Add new facilities and garrison
	panels.
	Fix bugs in construction status.
	Use white background color with unit icons.
	Add cps to occupant names when debugging.
	(draw_landuse_near_unit): Rename macro to for_all_cells_within_range.
	(unit_build_dialog): Rewrite. Many bug fixes. return int instead
	of *unit.
	Add separate call to has_advance_to_build.
	(unit_plan_dialog): New function and prototype.
	(global_advance_dialog): Fix autoresearch bug.
	Fix crashes due to incorrect oldprojects[] array size.
	Move SetPort call to position after conditional return.
	Fix sporadic name bug by two calls to side_adjective.
	* maccmd.c (do_set_view_angle): Only set vertscale if given a
 	valid prefixarg.
	* maccolors.c (default_draw_ai): Initialize to TRUE.
	(alert_256_colors): Initialize to TRUE.
	* macconq.c (main): Move check_screen_depths after get files and
 	make conditional.
	(update_area_display): Prototype extern. Add Side parameter.
	* macconq.h: Include MacWindows.h ifdef NEW_HEADERS, else include
 	Windows.h.
	(a_map): Add map->draw_ai.
	(default_draw_ai): New extern.
	(alert_256_colors): New extern.
	(xform_fractional): Move prototype here.
	(xform_flat): New prototype.
	(xform_fractional_flat): New prototype.
	* macdefs.h: (mPlanTypePopup): New menu.
	(miPlanTypeColonizing): New menu item.
	(miPlanTypeImproving): New menu item.
	(miPlanTypeRandom): New menu item.
	(diPrefsAIRegions): New dialog item.
	(diPrefs256colors): New dialog item.
	(dCity): All dialog items renumbered and renamed.
	(dPlan): New dialog with 3 dialog items.
	* macdraw.c (draw_unit_image): Rewrite. Support sidecolors in
 	closeups etc.
	(draw_unit_image): Restore colors BEFORE calling gray_out_rect (2
 	times).
	(draw_unit_image): Fix emblem bug due to new emblem_position code.
	* maclist.c (create_list): Use GetNewCWindow if hasColorQD.
	(draw_unit_list_entry): Fix task_desc prototype error.
	* macmap.c (xform_fractional): Move prototype to macconq.h.
	(xform_flat): New function.
	(xform_fractional_flat): New function.
	(adjust_latlong_interval): New function and prototype.
	(create_map): Use default_draw_ai.
	(create_map): Call adjust_latlong_interval.
	(set_map_power): Call adjust_latlong_interval.
	(set_map_angle): Compute a suitable vertscale.
	(draw_meridians): Fix sporadic longitude top error.
	(draw_meridians): Call xform_fractional_flat instead of
 	xform_fractional.
	(draw_selections_at): Fix (x,y) bug.
	(draw_selected_unit): Draw enemy units in red.
	(draw_selection_animation): Draw enemy units in red.
	(update_cell): Make DestRect larger to include row below.
	(update_cell): Use UNWRAP_RECT for meridians & feature names.
	* macmenus.c: (all_ai_ops): Prototype extern for use in
 	build_ai_type_menu.
	(query_position_modally): Unselect all selected units outside our
 	control.
	(do_closeup_mi): Prototype extern for use in ctrl-clicking of
 	unit.
	(build_ai_type_menu): Load AIs dynamically to the menu.
	(do_menu_command): Add support for dynamically loaded AIs.
	(do_menu_command): Support PLAN_COLONIZING & PLAN_IMPROVING.
	(apply_to_all_selected): Don't apply to selected units that we
 	don't control.
	(do_closeup_mi): Remove static declaration.
	(adjust_menus): Add support for dynamically loaded AIs.
	(adjust_menus): Don't enable commands for enemy unit closeups.
	(enable_commands_for_unit): Support PLAN_COLONIZING &
 	PLAN_IMPROVING.
	(enable_commands_for_unit): Fix menu number bug that disables More
 	menu items.
	* macmouse.c (do_closeup_mi): Prototype extern for use in
 	ctrl-clicking of unit.
	(do_mouse_down_map_content): Disable move and fire cmds for
 	selected enemy units.
	(do_mouse_down_map_content): Rewrite ctrl-clicking code using
 	side_sees_unit.  Call do_closeup_mi if ctrl-clicking non-advanced
 	unit, else call city_dialog.
	(select_all_units_in_rect): Always permit this if side_sees_unit.
	* macprefs.c (interp_mac_ui_data): Support default_draw_ai &
 	alert_256_colors.
	(ui_update_state): Support default_draw_ai & alert_256_colors.
	(set_preferences): Add case diPrefsAIRegions & diPrefs256colors.
	(set_preferences): Support default_draw_ai & alert_256_colors.
	(add_preferences_topic_items): Support default_draw_ai &
 	alert_256_colors.
	* macrow.c (draw_cliffs): Fix ouside-area crashes.
	(draw_contours): Trigger unwrapping 1 hex from right edge.
	(draw_gridlines): Trigger unwrapping 1 hex from right edge.
	(draw_shorelines): Trigger unwrapping 1 hex from right edge.
	(draw_feature_boundary_simple): Trigger unwrapping 1 hex from
 	right edge.
	* macwins.c (closeupwinwid): Change to 340.
	(init_construction_lists): Add separate call to
 	has_advance_to_build.
	(adjust_construction_controls): Check that we can build the
 	desired type.
	(side_rename_dialog): Fix colorscheme bug.
	(preferred_closeup_size): Add 4 pixels at bottom.
	(draw_unit_closeup): Make sure this is the selected unit on all
 	maps.
	(draw_unit_closeup): Optionally permit peeking at enemy units.
	(draw_unit_closeup): Fix duplicate goal_desc problem.
	(draw_unit_closeup): Align goal_desc and remove flanking junk.
	(draw_unit_closeup): Align task_desc and write "Task".
	(do_mouse_down_unit_closeup): Make sure this is the selected unit
 	on all maps.
	(destroy_unit_closeup): Make sure this is the selected unit on all
 	maps.
	* XconqProj.rsrc: (DITL 803 "City"): Extensively modified.
	(DITL 702 "Preferences Map Items"): Add AI regions checkbox.
	(DITL 704 "Preferences Offscreen Items"): Add recommend 256 colors
 	checkbox.
	(DITL 804 "City Research"): Minor changes.
	(DITL 805 "Global Science"): Minor changes.
	(DITL 807 "City Build"): Minor changes.
	(DITL 808 "City Plan"): New dialog item list.
	(DLOG 808 "City Plan"): New dialog.
	(MENU 206 "AI Types"): Remove static AI items.
	(MENU 249 "Plan Types"): Restore damaged resource. Add 3 new
 	items.
	* Xconq.r: Update from XconqProj.rsrc.
	* xconq.c (unit_build_dialog): Rewrite. Fix argument error.
	(unit_plan_dialog): New function.
----------------------------
revision 1.1
date: 1999/04/28 19:36:24;  author: shebs;  state: Exp;
Initial checkin.
=============================================================================
