
RCS file: /cvs/xconq/xconq/kernel/help.c,v
Working file: help.c
head: 1.57
branch:
locks: strict
access list:
symbolic names:
	xconq-7_4_1-release: 1.17
	xconq-7_4-branch: 1.17.0.2
	xconq-7_4-branchpoint: 1.17
	xtconq-pre-removal: 1.17
	xconq-7_3_3-release: 1.13
	xconq-7_3_2-release: 1.13
	xconq-7_3_1-release: 1.13
	xconq-7_3-branch: 1.13.0.2
	xconq-7_3-branchpoint: 1.13
keyword substitution: kv
total revisions: 57;	selected revisions: 57
description:
----------------------------
revision 1.57
date: 2004/07/27 02:15:01;  author: mcdonald;  state: Exp;  lines: +4 -0
Improvements to Xcscribe and help output.
----------------------------
revision 1.56
date: 2004/07/26 02:03:37;  author: mcdonald;  state: Exp;  lines: +432 -369
Convert entire help system to use format-indep indentation and newlines.
New help output functions.
Improve formatting of help system display.
Improve help file output.
----------------------------
revision 1.55
date: 2004/07/25 20:08:16;  author: mcdonald;  state: Exp;  lines: +49 -46
New Xcscribe feature: write out game index.
Xcscribe improvements.
Fix bug in module includes processing.
----------------------------
revision 1.54
date: 2004/07/24 22:58:32;  author: mcdonald;  state: Exp;  lines: +5 -3
Improve help system.
Change Xcscribe from "relay race" to "master-worker" process model.
Fix init warning and typo in Galaxy game.
----------------------------
revision 1.53
date: 2004/07/24 04:20:22;  author: mcdonald;  state: Exp;  lines: +43 -43
Improve help system. Complete help files directories for games.
----------------------------
revision 1.52
date: 2004/07/24 03:14:53;  author: mcdonald;  state: Exp;  lines: +97 -24
Improve help system.
----------------------------
revision 1.51
date: 2004/07/23 03:36:39;  author: mcdonald;  state: Exp;  lines: +100 -177
Improve help system.
----------------------------
revision 1.50
date: 2004/07/22 03:42:52;  author: mcdonald;  state: Exp;  lines: +207 -3
Improve help system.
Add navbars to some help files.
----------------------------
revision 1.49
date: 2004/07/19 03:45:34;  author: mcdonald;  state: Exp;  lines: +519 -272
Improve way that default lists for GDL globals are set.
More improvements to the help system.
----------------------------
revision 1.48
date: 2004/07/18 18:49:48;  author: ronne;  state: Exp;  lines: +2 -2
Add support for multiple and unique unit images.
----------------------------
revision 1.47
date: 2004/07/16 00:35:42;  author: ronne;  state: Exp;  lines: +29 -2
Improve the blurb code.
----------------------------
revision 1.46
date: 2004/07/12 23:31:21;  author: ronne;  state: Exp;  lines: +2 -0
Improvements to resupply code and victim finding code.
----------------------------
revision 1.45
date: 2004/07/12 03:32:13;  author: mcdonald;  state: Exp;  lines: +315 -52
Improvements to help system.
----------------------------
revision 1.44
date: 2004/07/11 19:00:42;  author: mcdonald;  state: Exp;  lines: +89 -5
More output functionality for help system.
Make help system safer.
----------------------------
revision 1.43
date: 2004/07/11 15:28:10;  author: mcdonald;  state: Exp;  lines: +1 -0
Fix compilation problem on MinGW32 (and possibly other platforms).
(Thanks to Robert Goulding for mentioning the problem.)
----------------------------
revision 1.42
date: 2004/07/11 08:15:43;  author: mcdonald;  state: Exp;  lines: +279 -0
New program! Xcscribe, an automatic documentation generator for Xconq games.
----------------------------
revision 1.41
date: 2004/07/06 02:43:59;  author: mcdonald;  state: Exp;  lines: +1 -1
Disable another compiler warning.
Clean up a horde of warnings.
----------------------------
revision 1.40
date: 2004/06/27 01:05:30;  author: ronne;  state: Exp;  lines: +6 -0
Improvements to ai performance and combat reporting.
----------------------------
revision 1.39
date: 2004/06/20 17:23:05;  author: mcdonald;  state: Exp;  lines: +10 -11
Cache results of recently added ACP and MP artithmetic functions.
Finish replacing 'u_acp' and 'u_speed' calls in the kerenl, where appropriate.
Minor fix to the help system.
New option for Wreckreation.
----------------------------
revision 1.38
date: 2004/06/20 09:07:48;  author: ronne;  state: Exp;  lines: +2 -0
Improve the tcltk variants setup dialog.
----------------------------
revision 1.37
date: 2004/06/20 04:02:30;  author: mcdonald;  state: Exp;  lines: +122 -101
More support and fixes for universal ACP and MP arithmetic.
Bugfixes and improvements to the help system.
Minor improvements to Wreckreation.
----------------------------
revision 1.36
date: 2004/06/19 23:57:24;  author: mcdonald;  state: Exp;  lines: +0 -4
Remove some debugging code accidentally left in the help system.
----------------------------
revision 1.35
date: 2004/06/19 23:16:53;  author: ronne;  state: Exp;  lines: +2 -2
Add more cursors and fix compile problem.
----------------------------
revision 1.34
date: 2004/06/19 21:53:13;  author: mcdonald;  state: Exp;  lines: +208 -81
Transplant type-based ACP computations to more ubiquitously cited files.
Make a substitute implementation of 'offsetof' more widely available.
More improvements to the help system.
Add a TODO note regarding ACP computations.
----------------------------
revision 1.33
date: 2004/06/19 05:09:49;  author: mcdonald;  state: Exp;  lines: +71 -11
More improvements and updates to the help system.
----------------------------
revision 1.32
date: 2004/06/15 04:14:21;  author: mcdonald;  state: Exp;  lines: +159 -15
Update player documentation.
Extend night and occupant effects on ACP.
Provide universal ACP arithmetic.
Update games in library to use some replacement tables.
Provide true capture prevention/allowance tables.
Provide toggle for use of combat protection tables in capture computations.
Allow units to change type on capture. Add new table for this.
Improvements and modifications to help system.
Improvements to and comments about type changing code.
Some housekeeping of the table definitions.
Source formatting improvments.
New version of Wreckreation.
----------------------------
revision 1.31
date: 2004/04/24 06:40:53;  author: mcdonald;  state: Exp;  lines: +2 -0
Update documentation.
Transplant a couple of macros to a different header.
Write comments mentioning new direct treasury access capabilities.
Support direct treasury access in run_economy and unit base consumption.
Safen a macro.
----------------------------
revision 1.30
date: 2003/10/04 04:36:17;  author: mcdonald;  state: Exp;  lines: +184 -7
Patches from Peter Garrone.
Add some tabular reporting to the help system.
Try to help some form of short name get displayed in unit list.
Fix bug involving escaped backslash character and Tcl/Tk.
----------------------------
revision 1.29
date: 2003/08/31 02:50:13;  author: mcdonald;  state: Exp;  lines: +2 -2
Revise documentation to reflect change to hit-by table usage.
Several bug fixes to Bellum Aeternum game.
Change combat material consumption to use hit-by multipliers.
----------------------------
revision 1.28
date: 2003/08/30 05:39:35;  author: mcdonald;  state: Exp;  lines: +2 -2
Update and correct documentation.
Treat hit-by as a table of boolean values.
Apply minor fixes to Bellum Aeternum.
----------------------------
revision 1.27
date: 2003/07/18 19:47:15;  author: ronne;  state: Exp;  lines: +56 -24
Improve help system and update BWidget
----------------------------
revision 1.26
date: 2003/06/21 23:02:28;  author: ronne;  state: Exp;  lines: +0 -5
Fix bugs in connection code.
----------------------------
revision 1.25
date: 2002/10/07 22:10:27;  author: tadalunch;  state: Exp;  lines: +0 -2

kernel/help.c: Remove unwanted strstr().
----------------------------
revision 1.24
date: 2002/08/11 21:46:00;  author: ronne;  state: Exp;  lines: +8 -3
Fix MAXSIDES-related crashes. Improve firing code.
----------------------------
revision 1.23
date: 2002/06/16 19:37:39;  author: kingdon;  state: Exp;  lines: +1 -1
	* kernel/help.c (describe_utype): Fix cut-and-paste error
	(ut_vanishes_on -> ut_wrecks_on) which led to the help wrongly
	describing ut_wrecks_on.
----------------------------
revision 1.22
date: 2002/05/08 23:51:17;  author: ronne;  state: Exp;  lines: +11 -29
Make sources C++ compatible.
----------------------------
revision 1.21
date: 2001/09/20 01:50:05;  author: kingdon;  state: Exp;  lines: +2 -2
	* kernel/help.c (describe_utype): attrition is a probfraction, not
	a percentage.
	* lib/russian-rev.g: acp-damage-effect values are hit points, not
	percentages.  Set version.
----------------------------
revision 1.20
date: 2001/09/04 04:55:04;  author: kingdon;  state: Exp;  lines: +23 -4
	* kernel/help.c (describe_utype): For auto-repair, try to be clear
	about who is repairing whom.  Print as probfraction.  Say
	"explicit repair" when that is what we mean.
	(tb_probfraction_desc): New function.
----------------------------
revision 1.19
date: 2001/05/12 23:20:30;  author: kingdon;  state: Exp;  lines: +1 -1
	* lib/beirut.g: Make leader 40% (not 20%) likely to get a building
	to surrender.  Make leader harder to kill (except by death squad).
	Add comment about scorekeeper.  Make game end after 100 turns.

	* kernel/help.c (describe_utype): Don't double % to tbcat.
----------------------------
revision 1.18
date: 2000/12/18 16:50:48;  author: shebs;  state: Exp;  lines: +0 -76
	Eliminate the macros MAXUTYPES, MAXTTYPES, MAXMTYPES, and
	MAXATYPES, size all type handling dynamically.
	* config.h (MAXUTYPES, MAXTTYPES, MAXMTYPES, MAXATYPES): Remove.
	* game.h (NONUTYPE, NONTTYPE, NONMTYPE, NONATYPE): Define to be -1.
	(count_terrain_subtypes, numcelltypes, numbordtypes, numconntypes,
	numcoattypes): Declare here instead of in world.h.
	(tmp_u_array, tmp_t_array): Declare.
	* gvar.def (edge-terrain, river-sink-terrain): Don't use type
	bounds.
	* table.def (adjacent-terrain-effect, terrain-exhaustion-type): Ditto.
	* utype.def (obsolete, wrecked-type): Ditto.
	* generic.c (count_terrain_subtypes, numcelltypes, etc): Move here
	from world.c.
	(tmp_u_array, tmp_t_array): New globals.
	(curmaxutypes, curmaxmtypes, curmaxttypes, curmaxatypes): Set to
	defaults convenient for the first allocation.
	(create_unit_type): New function.
	(disallow_more_unit_types, disallow_more_terrain_types): New functions.
	(allocate_table): Use them.
	* help.c (tm_table_row_desc): Remove, never used.
	* init.c (check_game_validity): Call disallow_* to make sure
	some type arrays are computed and cached.
	(calculate_globals): Ditto.
	(make_initial_materials): Use tmp_t_array.
	* mkrivers.c (make_up_river_borders): Ditto.
	* mkterr.c (elev_range, elev_lo, elev_hi, raw_range, raw_lo,
	raw_hi): New static globals.
	(compose_area, compose_earthlike_area): Use them.
	(make_random_terrain, fix_adjacent_terrain,
	flatten_liquid_terrain): Use tmp_t_array.
	* mkunits.c (make_countries): Dynalloc local arrays.
	(country_is_complete, make_independent_units): Use tmp_u_array.
	* nlang.c (ohd_nums, ohd_incomplete): New static globals.
	(others_here_desc, occupants_desc): Use them.
	* plan.c (plan_colonize_support): Use tmp_u_array.
	(gctc_supply): New static global.
	(good_cell_to_colonize): Use it.
	* ps.c (summary_of_seen_units_at): Use tmp_u_array.
	* read.c (default_supply): Remove, no longer to use.
	(init_predefined_symbols): Remove its setup.
	(interp_unit_default): Similarly.
	(interp_unit): Don't use default_supply.
	(interp_utype): Remove test for too many types, call
	create_unit_type.
	(interp_ttype, interp_mtype, interp_atype): Remove tests
	for too many types.
	(too_many_types): Remove, no longer needed.
	(rd_u_arr): New static global.
	(interp_standing_order, read_utype_doctrine): Use it.
	* run.c (rau_incrs): New static global.
	(run_advanced_units): Use it.
	(apr_type): New static global.
	(auto_pick_unit_research, auto_pick_side_research): Use it.
	(auto_pick_new_build_task): Use tmp_u_array.
	* run2.c (ttotals, uttotals): New static globals.
	(run_economy): Use them.
	* score.c (sum_property): Use tmp_u_array.
	* side.c (new_doctrine): Call disallow_more_unit_types.
	* supply.c (mad): New static global.
	(init_supply_system): Set it up.
	* unit.c (create_unit): Allocate numlivebytype and completenesses.
	(oc_numtypes): New static global.
	(can_occupy_unit): Use it.
	(toc_numtypes, type_can_occupy_cell): Similarly.
	(ocw_numtypes, can_occupy_cell_without): Similarly.
	(tocw_numtypes, type_can_occupy_cell_without): Similarly.
	(conn_num_types, can_occupy_conn_1): Similarly.
	(can_carry, type_can_occupy): Use tmp_u_array.
	(num_each_type, shared_each_type): New static globals.
	(eject_excess_occupants): Use them.
	(shortest_unique_name): Dynalloc firstuniq, use it as flag
	instead of shortestdone.
	(shortest_generic_name): Similarly.
	* write.c (write_table): Increase histogram size.

	* ai.c (atc_type): New static global.
	(assign_to_colonize): Use it.
	(pbt_prefs, pbt_fringe_terrain, pbt_enemy_types,
	pbt_num_to_transport): New static globals.
	(preferred_build_type): Use them.
	* ai.h (Strategy): Declare strengths etc as arrays of pointers
	instead of 2D arrays, unitlist and unitlistcount as pointers.
	(Theater): Similarly for numassigned, numneeded, etc.
	(strength_est, etc): New macros (not used yet).
	* iplayer.c (iru_numoffensive, iru_numdefensive): New static globals.
	(iplayer_review_units): Use them.
	* mplayer.c (mplayer_create_strategy): Allocate strength arrays.
	(create_theater): Dynalloc numassigned etc fields.
	(estimate_strengths, mplayer_read_strengths, mplayer_save_state):
	Change to pointer-to-pointer refs.
	(mru_numoffensive, mru_numdefensive): New static globals.
	(mplayer_review_units): Use them.
	* oplayer.c: Similarly.

	* cmd.c (gt_amts, gt_rslts): New static globals.
	(do_one_give, do_one_take): Use them.
	* ui.h (VP draw_materials): Make into a pointer.
	* ui.c (new_vp): Allocate draw_materials field.

	* maccmd.c (do_one_add_terrain): Use tmp_t_array.
	* macwins.c (side_research_dialog): Make participants static global.

	* tkconq.h (UI material_color, etc): Change from array to pointer.
	(UI cell_color, cell_shades): Rename from cellcolor and cellshades.
	(UI best_timages): Similarly.
	(UI unitpics, unitmasks, bestmimages): Remove, not used.
	(Map uvec, ustr, tvec, tstr): Change from array to pointer.
	* tkcmd.c (do_add_terrain, do_remove_terrain): Use tmp_t_array.
	(do_build): Use tmp_u_array.
	* tkinit.c (utype_indexes, mtype_indexes): Change to pointers.
	(init_display): Remove inits of unused fields, alloc space for
	cell_shades and material_color.
	(init_material_images): Remove setup of bestmimages.
	(init_terrain_images): Allocate for best_timages and terrpics.
	(init_shades): Use array-of-array refs to cell_shades.
	* tkmain.c (last_num_units_in_play, last_num_units_incomplete):
	Change from arrays to pointers.
	(init_redraws, update_unit_type_list): Allocate them.
	(create_map): Alloc map uvec, ustr, etc.
	* tkmap.c: Update refs to renamed fields.
	(MapW draw_aux_terrain, draw_materials): Make into pointers.

	* ccmd.c (do_build): Use tmp_u_array.
	* cconq.c (init_display): Use numutypes to size allocs.
	(ask_unit_type, ask_terrain_type): Use array of int instead of short.
	* cdraw.c (draw_type_list_entry): Init lasttypevisible from numutypes.

	* cconq.c (do_dir_2): Fix a variable name.
	* cconq.h: Use #else instead of #elif.
----------------------------
revision 1.17
date: 2000/08/21 21:34:35;  author: ronne;  state: Exp;  lines: +1 -1
Consolidate for_all_sides macros.
----------------------------
revision 1.16
date: 2000/08/20 13:37:02;  author: shebs;  state: Exp;  lines: +3 -3
	Change occupant-vision from a boolean to a percentage, fix
	other vision-related behavior.
	* table.def (occupant-vision): Tweak default, change fn name.
	* help.c (describe_utype): Update help info.
	* side.c (cover_area): Update usage.
	(see_cell): Also test for viewers exactly at the given location.
	(test_for_successful_viewer): Iterate over occupants, change
	to multiply see chance with uu_occ_vision.

	* refman.texi: Document the change.
----------------------------
revision 1.15
date: 2000/08/11 03:16:04;  author: shebs;  state: Exp;  lines: +135 -149
	* config.h (INITMAXUTYPES, etc): Remove, never used.
	* game.h (for_all_possible_unit_types, etc): Ditto.
	* help.c (u_histogram, t_histogram, etc): New globals.
	(u_property_desc, t_property_desc, uu_table_row_desc, etc): Use as
	dynalloced space instead of fixed-size arrays.
	* unit.h (Unit uihook): Remove, never used.
	* ui.h (VP aux_terrain_types): Remove, made into global.
	(VP draw_aux_terrain): Make into a pointer.
	(VP newest_to_show, fade_terrain, lowest_altitude,
	highest_altitude): Remove, never used.
	* ui.c (new_vp): Allocate vp->draw_aux_terrain.
	* world.c (aux_terrain_type_index): New global.
	(count_terrain_subtypes): Alloc and fill in.

	* macmap.c (create_map): Remove set of vp->aux_terrain_types.
	* macmenus.c (do_menu_command): Use aux_terrain_type_index to
	set terrain type submenu.

	* tkmap.c (Map aux_terrain_types): Remove, never used.
----------------------------
revision 1.14
date: 2000/08/01 16:25:46;  author: shebs;  state: Exp;  lines: +0 -3
	* ui.c (xform_cell_flat): Comment out error test, fix some
	isometric formulas.
	(nearest_cell): Similarly.
	(nearest_unit_view, find_unit_view_at): Fix handling of
	wrapping areas.
	(calc_view_misc): Ditto for isometric viewports.

	* tkmap.c (draw_area_background): Rewrite to handle overhead
	and isometric views uniformly.
	(draw_map_isometric): Rewrite to simplify, make solid color
	terrain drawing work again.
	(draw_map_outline): Draw outline off-area.

	* help.c, util.c, ui.c (error_is_bug): Remove, never used.
----------------------------
revision 1.13
date: 2000/04/19 15:04:59;  author: shebs;  state: Exp;  lines: +77 -124
	* help.c (create_game_help_nodes): Change displayed name of game
	design node, make weather note conditional.
	(describe_game_module_aux): Put notes with module ref.
	(describe_utype, describe_ttype, describe_mtype, describe_atype):
	Put notes at top instead of bottom.
	(tb_bool_desc): Simplify.
----------------------------
revision 1.12
date: 2000/04/07 17:23:26;  author: shebs;  state: Exp;  lines: +37 -16
	* atype.def (char, occurrence): Remove, never used.
	* help.c (describe_game_design): Remove ref to a_char.
	(describe_utype): Add more info about production tables.
----------------------------
revision 1.11
date: 2000/03/21 16:15:48;  author: shebs;  state: Exp;  lines: +2 -2
	* world.c, world.h (any_elev_variation): New global.
	(calculate_world_globals): Compute it.
	(allocate_area_elevations): Set initial elevations to
	minimum required by terrain type.
	* help.c (describe_ttype): Use any_elev_variation.
----------------------------
revision 1.10
date: 1999/12/14 03:15:28;  author: shebs;  state: Exp;  lines: +29 -63
	* help.c (describe_mtype): Ensure description not empty.
	(describe_ttype): Abstractify subtype-x detection.
----------------------------
revision 1.9
date: 1999/12/01 04:16:18;  author: shebs;  state: Exp;  lines: +10 -5
	* help.c (describe_ttype): Fix display of material relationships.
----------------------------
revision 1.8
date: 1999/10/24 11:20:09;  author: ronne;  state: Exp;  lines: +2 -2
Add new indepside code, fix various bugs.
----------------------------
revision 1.7
date: 1999/10/02 00:49:34;  author: shebs;  state: Exp;  lines: +0 -18
	* ccmd.c, cconq.c, help.c, history.c, read.c, util.c, xinit.c:
 	Remove __STDC__ conditionals.
----------------------------
revision 1.6
date: 1999/08/28 23:22:44;  author: shebs;  state: Exp;  lines: +2 -0
        * configure.in: Add --enable-build-warnings to control extra
        warnings, choose which subdirs to configure based on Unix vs
        Windows.
        * configure: Regenerate.
        * Makefile.in: Eliminate refs to lib-x11.
        * x11/Makefile.in: Ditto.
        * curses/Makefile.in, kernel/Makefile.in, tcltk/Makefile.in,
        x11/Makefile.in: Change UNIX_CFLAGS to autoconf-using HFLAGS,
        remove WARNING_CFLAGS.
        * actions.c, ai.c, ai.h, cmdline.c, cmdline.h, conq.h, generic.c,
        help.h, imf.c, imf.h, imf2imf.c, lisp.c, lisp.h, misc.h, system.h,
        imf2x.c, xcutil.h: Remove PARAMS usages.
        * gif.c, help.c, imf.c, imf2imf.c, lisp.c, unix.c, tkmain.c,
        wimfapp.c, imf2x.c, x2imf.c, xconq.c, xcutil.c: Remove unused
        variables, add prototypes, etc.
        * run2.c, side.c, macconq.c: Remove decl of update_area_display.
        * skelconq.c: Declare _dialog functions.
        * tkcmd.c: Remove exit_xconq decl.
        * wconq.c (check_player_displays): Remove uses.
        * xconq.c: Include tkconq.h.

        * tkconq.h (IMFLIB): Remove.
        (exit_xconq): Declare.
        * tkimf.c, tkinit.c: Remove imflib uses.
        * xconq.h, xcutil.c: Ditto.
        * ximf.c, xinit.c: Ditto.
        * PROJECTS: Remove lib-x11 item.
----------------------------
revision 1.5
date: 1999/08/21 12:16:38;  author: shebs;  state: Exp;  lines: +123 -101
        Eliminate still more warnings.
        * cmd.c, help.c, history.c, mknames.c, mkterr.c, mkunits.c,
        nlang.c, read.c, read2.c, score.c, side.c, supply.c, tp.c, ui.c,
        unit.c, unit.h, world.c, write.c: Remove PARAMS usages, remove
        unused variables, add missing function decls, comment out unused
        functions, etc.
        * obstack.h (obstack_begin): Add parameter types to fn pointer.
        * mknames.c (propose_unit_name): Fix "junky" naming method.
        * read.c (find_unit_spec_by_name, find_unit_spec_by_number):
        Use PARSE_PROPERTY_RETURN instead of PARSE_PROPERTY.
        * score.c (all_sides_draw): Assign result of add_side_to_set.
        * side.c: Include ai.h.
----------------------------
revision 1.4
date: 1999/07/17 14:35:21;  author: ronne;  state: Exp;  lines: +1 -1
Change fopen to open_file.
----------------------------
revision 1.3
date: 1999/07/03 12:43:50;  author: ronne;  state: Exp;  lines: +1 -36
Clean up file, remove old change markers.
----------------------------
revision 1.2
date: 1999/06/01 19:39:43;  author: shebs;  state: Exp;  lines: +67 -20
Tue Jun  1 18:41:59 1999  Hans Ronne  <ronne@bmc.uu.se>
	* combat.c, conq.h, game.h, help.c, init.c, keyword.def,
 	mkunits.c, move.c, mplayer.c, plan.def, read.c, run.c, run2.c,
 	score.c, side.h, supply.c, table.def, ui.c, unit.c, unit.h,
 	utype.def, world.c, world.h, write.c, maccmd.c, maccolors.c,
 	macconq.h, macdefs.h, macdraw.c, macinit.c. maclist.c, macmap.c,
 	macmenus.c, macmouse.c, macprefs.c, macrow.c. macwins.c: Remove
 	old change markers.
	* actions.c (transfer_supply): Disable use of indepside treasury.
	(do_create_in_action): Make separate call to has_advance_to_build.
	(do_create_in_action): Use the builders stash of cps if allowed.
	(do_create_in_action): Fix null side treasury crashes.
	(check_create_common): Make separate call to has_advance_to_build.
	(check_create_common): Fix null side treasury crashes.
	(set_created_unit_props): Turn on automation for indeps & AI
 	controlled sides.
	(do_create_at_action): Make separate call to has_advance_to_build.
	(do_create_at_action): Use the builders stash of cps if allowed.
	(do_create_at_action): Fix null side treasury crashes.
	(make_unit_complete): Fix null actionvector crashes at turn zero.
	(do_transfer_part_action): Make separate call to
 	has_advance_to_build.
	(check_change_type_action): Add separate call to
 	has_advance_to_build.
	* ai.c (numaitypes): Move to config.h to make it globally
 	accessible.
	(set_side_ai): Turn on automation for indeps & AI controlled
 	sides.
	(ai_update_plan): New function.
	(goal_truth): Handle GOAL_UNIT_OCCUPIED and GOAL_COLONIZE.
	(ai_init_shared): Call set_u_is_ground_mobile etc.
	(ai_init_shared): Set u_colonizer.
	(ai_init_shared): Call set_u_offensive_worth etc.
	(ai_init_shared): Set u_naval_mobile, u_ground_mobile and
 	u_facility.
	(offensive_worth): New function.
	(defensive_worth): New function.
	(exploring_worth): New function.
	(colonizing_worth): New function.
	(facility_worth): New function.
	(siege_worth): New function.
	(random_worth): New function.
	(set_u_offensive_worth): New function.
	(set_u_defensive_worth): New function.
	(set_u_explorer_worth): New function.
	(set_u_colonizer_worth): New function.
	(set_u_facility_worth): New unction.
	(set_u_random_worth): New function.
	(set_u_siege_worth): New function.
	(set_u_is_ground_mobile): New function.
	(set_u_is_naval_mobile): New function.
	(set_u_is_air_mobile): New function.
	(set_u_is_advanced): New function.
	(set_u_is_colonizer): New function.
	(set_u_is_facility): New function.
	* ai.h (a_ai_op): Add (*to_update_plan).
	(ai_update_plan): Prototype new function.
	(offensive_worth, defensive_worth, etc): New prototype.
	* combat.c (do_overrun_action): Make ovverun after fire possible.
	(check_overrun_action): Make overrun after fire & into empty cell
 	possible.
	(do_fire_at_action): Use SideMask code to handle fire display.
	(do_fire_at_action): Permit attempt to capture after fire from
 	adjacent cell.
	(do_fire_into_action): Use SideMask code to handle fire display.
	(maybe_hit_unit): Support uu_cellwide_protection_against.
	(maybe_hit_unit): Support uu_cellwide_protection_for.
	(maybe_hit_unit): Use SideMask code to handle hit display.
	(maybe_hit_unit): Fix occupant recursion bug.
	(attempt_to_capture_unit): Support uu_cellwide_protection_against.
	(attempt_to_capture_unit): Support uu_cellwide_protection_for.
	(detonate_on_cell): Use for_all_stack_with_occs instead of
 	for_all_stack.
	(can_capture_directly): New function.
	(type_can_capture_directly): New function.
	(type_can_carry): New function.
	(occ_can_defend_transport): New function.
	* config.h (MAXATYPES): Increase to 254.
	(numaitypes): Move here from ai.c to make it globally accessible.
	* conq.h (advanced_utypes etc): Remove.
	(numadv etc): Remove.
	(can_extract_at): Prototype.
	(can_load_at): Prototype.
	(can_capture_directly): Prototype.
	(type_can_capture_directly): Prototype.
	(type_can_carry): Prototype.
	(occ_can_defend_transport): Prototype.
	(has_advance_to_build): Prototype.
	(unit_actually_visible): New prototype.
	* game.h (for_all_advanced_utypes, etc): Remove.
	* goal.def (GOAL_UNIT_OCCUPIED, GOAL_COLONIZE): New goals.
	* gvar.def (g_default_runlength): New name for
 	g_ai_build_runlength.
	(g_disable_standard_economy): New gvar.
	(g_disband_unfinished_units): New gvar.
	(g_salvage_unfinished_cps): New gvar.
	(g_salvage_unfinished_materials): New gvar.
	(g_ai_advanced_unit_separation): New gvar.
	(g_ai_badtask_remove_chance): New gvar.
	(g_ai_badtask_max_retries): New gvar.
	(g_ai_badtask_reserve_chance): New gvar.
	(g_units_may_go_into_reserve): New gvar.
	(g_units_may_go_to_sleep): New gvar.
	* help.c (may_detonate): Prototype.
	(describe_utype): Make display of Material Handling conditional.
	(describe_utype): Add "None" option to required advances code.
	(u_property_desc, etc): Add spaces after commas to permit new
 	lines.
	(append_help_phrase): Add more dashes and an extra linefeed.
	* imf.c (interp_image): Disable palette run warning on the Mac.
	* init.c (advanced_utypes etc): Remove.
	(final_init): Remove call to setup_utype_vectors.
	(setup_utype_vectors): Remove function.
	* kernel.h (go_after_captive): New prototype.
	(attack_can_damage_or_capture): New prototype.
	(fire_can_damage_or_capture): New prototype.
	(real_capture_chance): New prototype.
	* keyword.def (K_AUTOPLAN): New keyword.
	(K_CP_STASH): New keyword.
	* kpublic.h (net_resume_build_task): New extern prototype.
	* mac.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	* mkunits.c (make_countries): Add separate call to
 	has_advance_to_build.
	(place_unit): Add separate call to has_advance_to_build.
	* move.c (do_move_action): Fix u2->nu2 typo & remove nu2
 	declaration.
	(do_enter_action): Fix u2->nu2 typo & remove nu2 declaration.
	* mplayer.c: Include kernel.h.
	(assign_to_defend_unit): Prototype new function.
	(assign_to_defend_cell): Prototype new function.
	(assign_to_defend_vicinity): Prototype new function.
	(mplayer_update_plan): Prototype new function.
	(defended_by_occupants): Prototype new function.
	(mplayer_ops): Add mplayer_update_plan.
	(update_unit_plans_randomly): Support g_units_may_go_into_reserve.
	(update_unit_plans_randomly): Support g_units_may_go_to_sleep.
	(mplayer_decide_plan): Skip for advanced units.
	(mplayer_decide_plan): Use u_colonizer_worth instead of
 	u_colonizer.
	(mplayer_update_plan): New function.
	(need_this_type_to_build_explorers): Check that we can build the
 	desired type.
	(assign_to_colonize): Rewrite. Use GOAL_COLONIZE and
 	PLAN_COLONIZING.
	(assign_to_improve): Clear task agenda and set NULL goal.
	(type_can_build_attackers): Check that we can build the desired
 	type.
	(type_can_build_colonizers): Add separate call to
 	has_advance_to_build.
	(type_can_build_colonizers): Use u_colonizer_worth instead of
 	u_colonizer.
	(preferred_build_type): Also count enemy occs by using
 	for_all_stack_with_occs.
	(preferred_build_type): Add separate call to has_advance_to_build.
	(preferred_build_type): Use u_colonizer_worth instead of
 	u_colonizer.
	(defended_by_occupants): New function.
	(assign_to_defense): Rewrite. Handle defense of units.
	(assign_to_defend_unit): New function.
	(assign_to_defend_cell): New function.
	(assign_to_defend_vicinity): New function.
	(assign_to_defend_theater): New function.
	(mplayer_adjust_plan): Skip for advanced units.
	(mplayer_adjust_plan): Add PLAN_COLONIZING & PLAN_IMPROVING.
	(mplayer_adjust_plan): Support g_units_may_go_into_reserve.
	(build_base_for_self): Check that we can build the desired type.
	(build_base_for_others): Check that we can build the desired type.
	(build_depot_for_self): Check that we can build the desired type.
	(rethink_plan): Support g_units_may_go_into_reserve.
	* plan.c: (execute_plan): Skip for advanced units.
	(execute_plan): Mark obsolete try code.
	(execute_plan): Support g_units_may_go_into_reserve.
	(execute_plan): Call ai_update_plan before execution.
	(plan_offense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_offense): Support g_units_may_go_into_reserve.
	(plan_offense): Support g_units_may_go_to_sleep.
	(self_build_base_for_self): Check that we can build the desired
 	type.
	(plan_offense_support): Check that we can build the desired type.
	(plan_defense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_defense): Call go_after_victim also for unit that can fire.
	(plan_defense): Use u_ai_tactical_range.
	(plan_defense): Support g_units_may_go_into_reserve.
	(plan_colonize): Rewrite. Use GOAL_COLONIZE.
	(plan_colonizer_support): Add separate call to
 	has_advance_to_build (2 times).
	(plan_colonizer_support): Use u_colonizer_worth instead of
 	u_colonizer.
 	(plan_improve): Add separate call to has_advance_to_build (2
 	times).
 	(good_cell_to_colonize): Rewrite. Check for presence of other
 	unit.  Check size goal for ALL advanced utypes. Remove check for
 	nearby enemy units.
	(plan_exploration): Support g_units_may_go_into_reserve.
	(plan_exploration): Handle GOAL_UNIT_OCCUPIED and
 	GOAL_CELL_OCCUPIED.
	(plan_exploration): Support g_units_may_go_to_sleep.
	(plan_explorer_support): Check that we can build the desired type.
	(victim_here): Also count with damage by fire and damage to occs.
	(victim_here): Give large size units higher rating.
	(victim_here): Give independent units lower rating.
	(victim_here): Give units that threaten our advanced units higher
 	rating.
	(go_after_captive): New function.
	(target_here): Also count with damage by fire and damage to occs.
	(target_here): Give large size units higher rating.
	(target_here): Give independent units lower rating.
	(target_here): Give units that threaten our advanced units higher
 	rating.
 	(capture_indep_if_nearby): Use u_ai_tactical_range.
 	(capture_useful_if_nearby): Use u_ai_tactical_range.
	* read.c (interp_unit): Restore code where ids start at 1 instead
 	of 0.
	(interp_unit): Add K_CP_STASH & K_AUTOPLAN.
	* run.c (unit_plan_dialog): New extern prototype.
	(net_resume_build_task): New extern prototype.
	(has_advance_to_research): New prototype.
	(select_by_weight): Prototype extern.
	(unit_build_dialog): Change prototype so that it returns int.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove function and prototype.
	(auto_pick_new_plan): New function and prototype.
	(set_new_build_task): Remove function and prototype.
	(run_advanced_units): Enable run_construction for UNIX again.
	(run_population): Fix indepside crashes.
	(run_construction): Completely rewritten & extensively debugged.
	(auto_pick_new_research): Rewrite so that random task is picked.
	(auto_pick_new_build_task): Rewrite. Call auto_pick_new_plan.
	(auto_pick_new_plan): New function.
	* run2.c (vary_winds): Prototype.
	(update_area_display): Prototype extern.
	(run_turn_start): Check g_disable_standard_economy.
	* side.c (update_area_display): Prototype extern.
	(create_side): Fix toggle AI bug by initializing
 	newside->prefixarg.
	(side_controls_unit): Give debuggers full control.
	(side_sees_unit): Include trusted side, debuggers, g_peek_at_enemy
 	and endofgame.
	* side.h (has_advance): Fix null side crashes.
	* table.def (uu_builder_can_reuse_cp): New table.
	(uu_cellwide_protection_against): New table.
	(uu_cellwide_protection_for): New table.
	* task.c (attack_can_damage_or_capture): Move prototype to
 	kernel.h.
	(do_hit_unit_task): Count with fire and capture at pointblank
 	range.
	(do_hit_unit_task): Fix firing range bug.
	(do_hit_unit_task): Move in to capture if unit is undefended.
	(attack_can_damage_or_capture): Do attack if occ can be damaged.
	(fire_can_damage): Do attack if occ can be damaged.
	(fire_can_damage_or_capture):New function.
	(real_capture_chance): New function.
	(execute_task): Support g_ai_badtask_remove_chance.
	(execute_task): Support g_ai_badtask_max_retries.
	(execute_task): Support g_ai_badtask_reserve_chance.
	(execute_task): Support g_units_may_go_into_reserve.
	(set_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(push_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(set_occupy_task): New function.
	* tp.c (net_resume_build_task): New function (prototyped in
 	kpublic.h).
	* ui.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	(xform_cell): Move core calculations to new function
 	xform_cell_flat.
	(xform_cell_flat): New function.
	(xform_cell_fractional_flat): New function.
	(favored_type): Check that we can build the desired type.
	* ui.h (xform_cell_flat, xform_cell_fractional_flat): New
 	prototypes.
	* unit.c (default_size): Change from 0 to 1.
	(has_advance_to_build): Remove prototype.
	(create_unit): Initialize unit->autoplan.
	(create_unit): Initialize unit->cp_stash.
	(can_carry): Check for u_facility_total_max & u_mobile_total_max.
	(type_can_occupy): Check for u_facility_total_max &
 	u_mobile_total_max.
	(type_allowed_on_side): Remove call to has_advance_to_build.
	(set_unit_side): Turn on autobuild & autoresearch if side is under
 	AI control.
	* unit.h (a_unit): Add unit->cp_stash.
	(a_unit): Add unit->autoplan.
	(for_all_occs_with_occs): Define new macro.
	(type_ever_available): Prototype extern.
	* utype.def (u_offensive_worth): New utype property.
	(u_defensive_worth): New utype property.
	(u_explorer_worth): New utype property.
	(u_colonizer_worth): New utype property.
	(u_facility_worth): New utype property.
	(u_random_worth): New utype property.
	(u_siege_worth): New utype property.
	(u_offensive): Change default from 1 to 0.
	(u_explorer): Change default from 1 to 0.
	(u_besieger): New utype property.
	(u_ship): New utype property.
	(u_ground): New utype property.
	(u_air): New utype property.
	(u_facility_total_max): New utype property.
	(u_mobile_total_max): New utype property.
	(u_ai_min_defenders) : Ner utype property.
	(u_ai_tactival_range): New utype property.
	* world.c (latlong_to_xy): Fix meridian drawing bug.
	* world.h (cell_is_within_n_steps): Rename to
 	cell_is_within_range.
	(for_all_cells_within_n_steps): Rename to
 	for_all_cells_within_range.
	(for_all_stack_with_occs): Define new macro.
	* write.c (write_area_users): Change so that nextid starts at 1
 	instead of 0.
	(write_units): Restore old code so that nextid starts at 1 instead
 	of 0.
	(write_unit_properties): Add K_AUTOPLAN & K_CP_STASH.
	* macadv.c: (MAX_DISPLAYED_FACS): New macro constant.
	(MAX_DISPLAYED_OCCS): New macro constant.
	(CLEAR_AGENDA): New macro constant.
	(unit_build_dialog): Change prototype.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove prototype.
	(copy_rect_from_gworld): New function and prototype.
	(city_dialog): Rewrite. Many bug fixes and improvements.
	Most important ones:  Add conditional call to draw_unit_info.
	Use backcolor to draw region outside the area in the city map.
	Use copy_rect_from_gworld to do the offscreen graphics.
	Disable all auto checkboxes when dside is under AI control.
	Check that unit has a plan. Add new Plan Type popup menu.
	Add new Autoplan checkbox. Add new AI control checkbox.
	Split occupant panel into facilities and garrison panels.
	Fix runlength bug and limit it to CLEAR_AGENDA.
	Call net_clear_task_agenda & net_set_unit_asleep for idle units.
	Add separate call to has_advance_to_build.
	(draw_city_statistics): Rewrite. Many bug fixes and improvements.
	Most important ones: Add drawing of unit icon.
	Fix sporadic name bug by call to side_adjective.
	Fix parenthesis bug in construction status field.
	Fix crashing bug in occupant display code.
	Use u_facility_worth instead of !mobile to identify facilities.
	Add AI control info text field.	 Add new facilities and garrison
	panels.
	Fix bugs in construction status.
	Use white background color with unit icons.
	Add cps to occupant names when debugging.
	(draw_landuse_near_unit): Rename macro to for_all_cells_within_range.
	(unit_build_dialog): Rewrite. Many bug fixes. return int instead
	of *unit.
	Add separate call to has_advance_to_build.
	(unit_plan_dialog): New function and prototype.
	(global_advance_dialog): Fix autoresearch bug.
	Fix crashes due to incorrect oldprojects[] array size.
	Move SetPort call to position after conditional return.
	Fix sporadic name bug by two calls to side_adjective.
	* maccmd.c (do_set_view_angle): Only set vertscale if given a
 	valid prefixarg.
	* maccolors.c (default_draw_ai): Initialize to TRUE.
	(alert_256_colors): Initialize to TRUE.
	* macconq.c (main): Move check_screen_depths after get files and
 	make conditional.
	(update_area_display): Prototype extern. Add Side parameter.
	* macconq.h: Include MacWindows.h ifdef NEW_HEADERS, else include
 	Windows.h.
	(a_map): Add map->draw_ai.
	(default_draw_ai): New extern.
	(alert_256_colors): New extern.
	(xform_fractional): Move prototype here.
	(xform_flat): New prototype.
	(xform_fractional_flat): New prototype.
	* macdefs.h: (mPlanTypePopup): New menu.
	(miPlanTypeColonizing): New menu item.
	(miPlanTypeImproving): New menu item.
	(miPlanTypeRandom): New menu item.
	(diPrefsAIRegions): New dialog item.
	(diPrefs256colors): New dialog item.
	(dCity): All dialog items renumbered and renamed.
	(dPlan): New dialog with 3 dialog items.
	* macdraw.c (draw_unit_image): Rewrite. Support sidecolors in
 	closeups etc.
	(draw_unit_image): Restore colors BEFORE calling gray_out_rect (2
 	times).
	(draw_unit_image): Fix emblem bug due to new emblem_position code.
	* maclist.c (create_list): Use GetNewCWindow if hasColorQD.
	(draw_unit_list_entry): Fix task_desc prototype error.
	* macmap.c (xform_fractional): Move prototype to macconq.h.
	(xform_flat): New function.
	(xform_fractional_flat): New function.
	(adjust_latlong_interval): New function and prototype.
	(create_map): Use default_draw_ai.
	(create_map): Call adjust_latlong_interval.
	(set_map_power): Call adjust_latlong_interval.
	(set_map_angle): Compute a suitable vertscale.
	(draw_meridians): Fix sporadic longitude top error.
	(draw_meridians): Call xform_fractional_flat instead of
 	xform_fractional.
	(draw_selections_at): Fix (x,y) bug.
	(draw_selected_unit): Draw enemy units in red.
	(draw_selection_animation): Draw enemy units in red.
	(update_cell): Make DestRect larger to include row below.
	(update_cell): Use UNWRAP_RECT for meridians & feature names.
	* macmenus.c: (all_ai_ops): Prototype extern for use in
 	build_ai_type_menu.
	(query_position_modally): Unselect all selected units outside our
 	control.
	(do_closeup_mi): Prototype extern for use in ctrl-clicking of
 	unit.
	(build_ai_type_menu): Load AIs dynamically to the menu.
	(do_menu_command): Add support for dynamically loaded AIs.
	(do_menu_command): Support PLAN_COLONIZING & PLAN_IMPROVING.
	(apply_to_all_selected): Don't apply to selected units that we
 	don't control.
	(do_closeup_mi): Remove static declaration.
	(adjust_menus): Add support for dynamically loaded AIs.
	(adjust_menus): Don't enable commands for enemy unit closeups.
	(enable_commands_for_unit): Support PLAN_COLONIZING &
 	PLAN_IMPROVING.
	(enable_commands_for_unit): Fix menu number bug that disables More
 	menu items.
	* macmouse.c (do_closeup_mi): Prototype extern for use in
 	ctrl-clicking of unit.
	(do_mouse_down_map_content): Disable move and fire cmds for
 	selected enemy units.
	(do_mouse_down_map_content): Rewrite ctrl-clicking code using
 	side_sees_unit.  Call do_closeup_mi if ctrl-clicking non-advanced
 	unit, else call city_dialog.
	(select_all_units_in_rect): Always permit this if side_sees_unit.
	* macprefs.c (interp_mac_ui_data): Support default_draw_ai &
 	alert_256_colors.
	(ui_update_state): Support default_draw_ai & alert_256_colors.
	(set_preferences): Add case diPrefsAIRegions & diPrefs256colors.
	(set_preferences): Support default_draw_ai & alert_256_colors.
	(add_preferences_topic_items): Support default_draw_ai &
 	alert_256_colors.
	* macrow.c (draw_cliffs): Fix ouside-area crashes.
	(draw_contours): Trigger unwrapping 1 hex from right edge.
	(draw_gridlines): Trigger unwrapping 1 hex from right edge.
	(draw_shorelines): Trigger unwrapping 1 hex from right edge.
	(draw_feature_boundary_simple): Trigger unwrapping 1 hex from
 	right edge.
	* macwins.c (closeupwinwid): Change to 340.
	(init_construction_lists): Add separate call to
 	has_advance_to_build.
	(adjust_construction_controls): Check that we can build the
 	desired type.
	(side_rename_dialog): Fix colorscheme bug.
	(preferred_closeup_size): Add 4 pixels at bottom.
	(draw_unit_closeup): Make sure this is the selected unit on all
 	maps.
	(draw_unit_closeup): Optionally permit peeking at enemy units.
	(draw_unit_closeup): Fix duplicate goal_desc problem.
	(draw_unit_closeup): Align goal_desc and remove flanking junk.
	(draw_unit_closeup): Align task_desc and write "Task".
	(do_mouse_down_unit_closeup): Make sure this is the selected unit
 	on all maps.
	(destroy_unit_closeup): Make sure this is the selected unit on all
 	maps.
	* XconqProj.rsrc: (DITL 803 "City"): Extensively modified.
	(DITL 702 "Preferences Map Items"): Add AI regions checkbox.
	(DITL 704 "Preferences Offscreen Items"): Add recommend 256 colors
 	checkbox.
	(DITL 804 "City Research"): Minor changes.
	(DITL 805 "Global Science"): Minor changes.
	(DITL 807 "City Build"): Minor changes.
	(DITL 808 "City Plan"): New dialog item list.
	(DLOG 808 "City Plan"): New dialog.
	(MENU 206 "AI Types"): Remove static AI items.
	(MENU 249 "Plan Types"): Restore damaged resource. Add 3 new
 	items.
	* Xconq.r: Update from XconqProj.rsrc.
	* xconq.c (unit_build_dialog): Rewrite. Fix argument error.
	(unit_plan_dialog): New function.
----------------------------
revision 1.1
date: 1999/04/28 19:36:25;  author: shebs;  state: Exp;
Initial checkin.
=============================================================================
