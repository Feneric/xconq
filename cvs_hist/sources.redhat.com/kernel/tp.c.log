
RCS file: /cvs/xconq/xconq/kernel/tp.c,v
Working file: tp.c
head: 1.82
branch:
locks: strict
access list:
symbolic names:
	xconq-7_4_1-release: 1.40
	xconq-7_4-branch: 1.40.0.2
	xconq-7_4-branchpoint: 1.40
	xtconq-pre-removal: 1.31
	xconq-7_3_3-release: 1.27
	xconq-7_3_2-release: 1.27
	xconq-7_3_1-release: 1.27
	xconq-7_3-branch: 1.27.0.2
	xconq-7_3-branchpoint: 1.27
keyword substitution: kv
total revisions: 82;	selected revisions: 82
description:
----------------------------
revision 1.82
date: 2004/08/22 00:37:41;  author: ronne;  state: Exp;  lines: +52 -0
Add network functions for new tasks, fix bug in change_unit_type.
----------------------------
revision 1.81
date: 2004/04/25 19:28:18;  author: mcdonald;  state: Exp;  lines: +1 -0
Add unit's 'creation_id' field to network game checksum.
----------------------------
revision 1.80
date: 2003/12/24 03:43:13;  author: ronne;  state: Exp;  lines: +132 -2
Fixes to mplayer sync bug and ai toggling code.
----------------------------
revision 1.79
date: 2003/12/22 01:08:10;  author: ronne;  state: Exp;  lines: +2 -2
Fixes to startup and game over dialogs.
----------------------------
revision 1.78
date: 2003/12/14 16:23:06;  author: ronne;  state: Exp;  lines: +1 -1
Fix two bugs in the game saving code.
----------------------------
revision 1.77
date: 2003/12/14 03:37:47;  author: ronne;  state: Exp;  lines: +50 -2
Add support for network games in file saving code.
----------------------------
revision 1.76
date: 2003/11/30 23:31:01;  author: mcdonald;  state: Exp;  lines: +0 -3
Make the Xconq apps compile with strict ANSI C compliance.
----------------------------
revision 1.75
date: 2003/11/28 20:41:38;  author: ronne;  state: Exp;  lines: +0 -8
Separate master and client debug output.
----------------------------
revision 1.74
date: 2003/11/23 14:08:30;  author: ronne;  state: Exp;  lines: +1 -0
Fix network bug in module loading code.
----------------------------
revision 1.73
date: 2003/11/15 00:20:44;  author: ronne;  state: Exp;  lines: +0 -2
Improve module loading and patching code.
----------------------------
revision 1.72
date: 2003/10/18 16:59:40;  author: ronne;  state: Exp;  lines: +0 -2
Overhaul of material handling code.
----------------------------
revision 1.71
date: 2003/07/26 21:54:37;  author: ronne;  state: Exp;  lines: +39 -0
Various bug fixes and improvements.
----------------------------
revision 1.70
date: 2003/06/21 23:02:28;  author: ronne;  state: Exp;  lines: +0 -153
Fix bugs in connection code.
----------------------------
revision 1.69
date: 2003/06/17 23:15:05;  author: ronne;  state: Exp;  lines: +1 -1
Fixes to resource files and time code.
----------------------------
revision 1.68
date: 2003/06/16 23:07:47;  author: ronne;  state: Exp;  lines: +17 -2
Fix network code for Mac OSX.
----------------------------
revision 1.67
date: 2002/08/13 15:04:22;  author: ronne;  state: Exp;  lines: +23 -0
Enable Remove Side button. Fix randomized subimages code.
----------------------------
revision 1.66
date: 2002/08/06 20:26:15;  author: kingdon;  state: Exp;  lines: +11 -9
	* kernel/tp.c (receive_packet): Rename "foo" label to
	"look_for_data".
----------------------------
revision 1.65
date: 2002/08/04 19:04:31;  author: ronne;  state: Exp;  lines: +0 -13
Improve handling of player names.
----------------------------
revision 1.64
date: 2002/08/01 23:02:19;  author: ronne;  state: Exp;  lines: +6 -1
Fix sporadic lockups in network hosts.
----------------------------
revision 1.63
date: 2002/05/08 23:51:17;  author: ronne;  state: Exp;  lines: +22 -23
Make sources C++ compatible.
----------------------------
revision 1.62
date: 2002/04/26 23:14:55;  author: ronne;  state: Exp;  lines: +65 -27
Fix join after start bug.
----------------------------
revision 1.61
date: 2002/04/25 19:13:37;  author: ronne;  state: Exp;  lines: +120 -0
Fix stalled unit bug.
----------------------------
revision 1.60
date: 2002/03/31 00:06:51;  author: ronne;  state: Exp;  lines: +31 -15
Further tweaks of the network code.
----------------------------
revision 1.59
date: 2002/03/29 17:45:20;  author: ronne;  state: Exp;  lines: +55 -30
Streamline network code.
----------------------------
revision 1.58
date: 2002/03/25 02:09:39;  author: ronne;  state: Exp;  lines: +120 -5
Fix sync error in double-click filter
----------------------------
revision 1.57
date: 2002/03/23 21:48:13;  author: ronne;  state: Exp;  lines: +6 -1
Implement low level double-click filter.
----------------------------
revision 1.56
date: 2002/03/19 20:45:54;  author: kingdon;  state: Exp;  lines: +184 -91
	* kernel/tp.c (broadcast_action): New function, replaces
	broadcast_next_action but works like the rest of the networking
	code (avoids a bug in which broadcast_next_action removed a
	different action than the one it should have).
	(net_prep_enter_action and all other net_prep_*_action functions):
	if not master, just send the action to the server, rather than
	trying to temporarily put it in local state.
----------------------------
revision 1.55
date: 2002/03/17 22:28:45;  author: ronne;  state: Exp;  lines: +7 -3
Fix problem with host lockups during game launch.
----------------------------
revision 1.54
date: 2002/03/16 23:39:23;  author: ronne;  state: Exp;  lines: +58 -11
Finally (?) fix all synch errors.
----------------------------
revision 1.53
date: 2002/03/10 20:44:01;  author: ronne;  state: Exp;  lines: +28 -13
Various pre-release bug fixes.
----------------------------
revision 1.52
date: 2002/03/07 22:27:49;  author: ronne;  state: Exp;  lines: +0 -1
Post checkin cleanup.
----------------------------
revision 1.51
date: 2002/03/06 21:03:57;  author: ronne;  state: Exp;  lines: +13 -26
Finally fix network lockups and host timeouts on unix.
----------------------------
revision 1.50
date: 2002/03/03 21:08:02;  author: ronne;  state: Exp;  lines: +1 -1
Add missing linefeed in debug message.
----------------------------
revision 1.49
date: 2002/02/27 06:55:38;  author: ronne;  state: Exp;  lines: +5 -1
Fix unix-specific sync errors.
----------------------------
revision 1.48
date: 2002/02/25 23:16:50;  author: ronne;  state: Exp;  lines: +2 -2
Fixes to the network join and quit code.
----------------------------
revision 1.47
date: 2002/02/17 00:25:43;  author: ronne;  state: Exp;  lines: +44 -3
Fix sync errors and lockups in network code.
----------------------------
revision 1.46
date: 2002/02/09 20:03:37;  author: ronne;  state: Exp;  lines: +4 -1
Fix network game resign bugs.
----------------------------
revision 1.45
date: 2001/01/04 20:14:37;  author: ronne;  state: Exp;  lines: +4 -2
More mac network fixes.
----------------------------
revision 1.44
date: 2000/12/31 02:33:59;  author: ronne;  state: Exp;  lines: +5 -0
Fix problem with double join events.
----------------------------
revision 1.43
date: 2000/12/29 00:00:11;  author: ronne;  state: Exp;  lines: +13 -0
Implement chat function on the mac.
----------------------------
revision 1.42
date: 2000/12/27 01:48:02;  author: ronne;  state: Exp;  lines: +13 -1
Implement TCP/IP networking for the mac.
----------------------------
revision 1.41
date: 2000/12/22 22:19:04;  author: ronne;  state: Exp;  lines: +80 -2
Move shared network code to kernel.
----------------------------
revision 1.40
date: 2000/12/03 23:36:20;  author: ronne;  state: Exp;  lines: +3 -3
Fix some problems with capture code.
----------------------------
revision 1.39
date: 2000/11/25 18:26:24;  author: shebs;  state: Exp;  lines: +0 -8
	* tp.c (send_game_checksum): Remove, not needed.
----------------------------
revision 1.38
date: 2000/11/24 02:49:21;  author: ronne;  state: Exp;  lines: +275 -0
General cleanup of kernel prototypes - part 4.
----------------------------
revision 1.37
date: 2000/11/20 03:41:53;  author: shebs;  state: Exp;  lines: +13 -32
	* tp.c: Similarly.
----------------------------
revision 1.36
date: 2000/11/12 00:39:54;  author: ronne;  state: Exp;  lines: +1 -6
General cleanup of kernel prototypes - part 1.
----------------------------
revision 1.35
date: 2000/11/05 19:47:01;  author: shebs;  state: Exp;  lines: +13 -0
	Add an old copy of the mplayer for comparison purposes, call it
	"oplayer".
	* kernel/oplayer.c: New file, 7.3.3 version of mplayer, updated.
	* kernel/Makefile.in (OBJS): Add oplayer.o.
	* config.h (numaitypes): Increment.
	* ai.h (oplayertype): New enum value.
	* ai.c (init_ai_types): Add oplayer.

	Add help info for AI types.
	* ai.h (AI_ops help): New field, brief info about AI.
	* ai.c (ai_type_name, ai_type_help): New functions.
	* iplayer.c (iplayer_ops): Add help field.
	* mplayer.c (mplayer_ops): Ditto.

	* mplayer.c: Use side->id instead of side_number() throughout.
	(rethink_plan): Sit still if we found a transport to accelerate
	with.
	* tp.c (net_push_sentry_task): New function.
----------------------------
revision 1.34
date: 2000/09/10 05:45:40;  author: shebs;  state: Exp;  lines: +16 -20
	Random rewrites and reorgs resolving remote networking bugs.
	* ai.c (init_ai): Fill in side->rai for remote AIs.
	(set_side_ai): Simplify, and add feedback on results.
	(run_local_ais, run_ai_plan_adjust): Move here from run.c,
	test taskexecs instead of need_ai_task_reaction.
	* cmd.c (do_ai_side): Fix player feedback to reflect that
	network roundup may be necessary before state changes.
	* cmdline.c (option_width, option_height, option_circumference):
	New globals.
	(parse_world_option): Set these instead of pushing a variant.
	(set_variants_from_options): Call net_set_variant_value instead
	of pushing variant settings.
	(find_variant_from_name): New function.
	* init.c (start_player_pre_setup_stage): Call do_module_variants.
	(final_init): Report more data structure sizes.
	* kernel.h (set_variant_value): Declare.
	* kpublic.h (net_set_variant_value): Declare.
	* module.h (Variant newvalues): New field, array of new settings
	for variant.
	* module.c (create_game_module): Store a copy of the module name.
	(set_variant_value): Move here from tkmain.c.
	(do_one_variant): Fill from newvalues fields.
	* read.c (interp_variant_defns, add_std_var): Fill in newvalues
	fields.
	* run.c (latest_action_x, latest_action_y): New globals.
	(num_local_ais): Move to ai.c.
	(need_ai_task_reaction): Remove, use taskexecs instead.
	(save_run_state, clear_task_outcomes): New functions.
	(run_game): Call them.
	(move_one_unit_multiple): Replace need_ai_task_reaction test
	with last_task_outcome and AI usage test.
	(run_side_research, run_construction): Test local AI instead
	of AI in general (dubious).
	* side.h (Side rai): New field.
	(side_has_ai): Test both local and remote AI.
	(side_has_local_ai): New macro.
	* task.c (execute_task): Rework recording of task outcome.
	* tp.h (RAI): New struct, placeholder "remote AI".
	* tp.c: Change run warnings into notices.
	(net_set_variant_value): New function.
	(receive_variant_settings): Allow at most three values.
	* write.c (write_side_properties): Only write AI state for
	local AIs (dubious).

	* tkconq.tcl: Rewrite variant handling to do more work in
	kernel.
	(set_variant_value_cmd): New proc, replaces broadcast_variant_value.
	(set_variants): Do less.
	(add_world_size_dialog_items): Comment out lat/lon items.
	(insert_chat_string): Test for existence of window before insert.
	* tkmain.c: Rewrite for variants also.
	(send_value_value, implement_variants): Remove tcl commands.
	(tk_set_variant_value): Rewrite to pass along to kernel.
	(interpret_variants): Rewrite.
	(set_variant_world_size, set_variant_real_time): Remove,
	handled uniformly in kernel.
	(update_variant_setting): Rewrite.
----------------------------
revision 1.33
date: 2000/09/05 05:30:16;  author: shebs;  state: Exp;  lines: +14 -8
	Make side name choice work in networked games, make pregame
	chat work line-at-a-time instead of per-char.
	* init.c, kernel.h (rename_side_for_player): Add argument to
	specify which entry in side library to use.
	* tp.c, kpublic.h (net_rename_side_for_player): Similarly.
	(receive_assignment_setting): Interpret arg to rename packet.

	* tkconq.tcl (set_variants): Fix bug.
	(add_player_dialog_items): Use rename_side_for_player_cmd for
	both menu and random cases.
	(rename_side_for_player_cmd): Add argument.
	(set_name_from_side_lib_cmd): Remove, no longer needed.
	(join_game): Add newline to chat string.
	(popup_chat): Add text entry widget at bottom.
	(add_program): Simplify code that announces player arrival.
	(enable_chat): Only handle <Return> specially.
	(send_chat_bdg): Send whole string from text entry widget.
	(insert_chat_string): Rewrite to always insert whole lines.
	* tkmain.c (tk_set_name_from_side_lib): Remove, no longer needed.
	(tk_rename_side_for_player): Add argument.
----------------------------
revision 1.32
date: 2000/09/03 22:46:02;  author: shebs;  state: Exp;  lines: +96 -19
	General overhaul and cleanup of networking support, including
	fixed command-line -host/-join handling and ability to load
	a module directly instead of sending across the net.
	* cmdline.c (game_chosen): Remove, no longer used.
	(parse_command_line): Name -h <n> players as "?@" instead of "x@",
	remove warning messages.
	(set_players_from_options): Update remote programs with info
	about players.
	* init.c, conq.h (start_game_load_stage,
	start_variant_setup_stage, start_player_pre_setup_stage,
	start_player_setup_stage, start_game_ready_stage): New functions,
	control over game setup stages.
	* side.c: Add a couple comments.
	* socket.c (wait_for): Comment out excessive output.
	* tp.c (add_remote_players): Fill in existing players named "?"
	before creating new players.
	(net_update_player): New function.
	(download_game_module): Add case to download module name only.
	(broadcast_start_variant_setup, broadcast_start_player_setup):
	New functions.
	(send_packet): Change timeout warning to a notice.
	(receive_data): Dump no-op loop counts once/second only.
	(receive_packet): Handle new stage start packets.
	(receive_game_checksum): Notify instead of warn about checksum
	failures.
	(receive_assignment_setting): Handle player spec packet.
	* tp.h: Declare new functions.

	* tkconq.tcl (master_rid): New global, use everywhere instead
	of assuming master's rid is 1.
	(set_variant): Change stage only if master.
	(update_player_entry, update_allplayer_buttons): Don't run if
	no dialog.
	(popup_chat): Handle mid-game first-time popup correctly.
	* tkinit.c: (init_ui): Handle repeated calls.
	* tkmain.c (TclCmdFn): New function typedef, use for all
	tcl commands.
	(tcl_cmd): New function.
	(initial_ui_init): Use to set up all generic tcl commands.
	(tk_start_player_setup_stage): New tcl command.
	(add_remote_locally): Set master_rid.
	(launch_game_2): Merge into launch_game.

	* xconq.c (main): Reorganize to handle command-line and
	interactive setup more uniformly.
----------------------------
revision 1.31
date: 2000/08/21 21:34:35;  author: ronne;  state: Exp;  lines: +1 -1
Consolidate for_all_sides macros.
----------------------------
revision 1.30
date: 2000/08/18 23:42:55;  author: ronne;  state: Exp;  lines: +29 -2
Move acp-indep builds to normal execution code.
----------------------------
revision 1.29
date: 2000/07/14 15:55:39;  author: shebs;  state: Exp;  lines: +37 -57
	* kernel/Makefile.in, tcltk/Makefile.in: Add dependencies on
	kernel.h and kpublic.h.

	* world.c, kernel.h (paint_elevation): Add code (set vs modify)
	and random variation args.
	(fix_elevations): New function.
	* tp.c, kpublic.h (net_paint_elevation): Similarly.
	(broadcast_layer_change): Add an argument.
	(receive_world_prop): Handle extra argument in packet.
	* mkterr.c (set_edge_terrrain): New function, generalizes
	add_edge_terrain to control mods of edge terrain.
	(set_edge_elevation): New function, split out from set_edge_values.

	* macdesign.c (apply_designer_tool, paint_on_drag): Fix usages
	of net_paint_elevation.

	* tkconq.h (UI curelevationcode, curelevationvary): New fields.
	* tkconq.tcl (popup_design_palette): Add close button.
	(make_elev_paint_frame): Rewrite to support random vary and
	elevation fixing, plus give better feedback.
	(set_elevation, etc): Pass additional random vary arg.
	(dbg_set_design_data): Update elevation painting feedback.
	* tkmain.c (tk_designer_fix): New tcl command.
	(tk_set_design_data): Handle random vary value.
	* tkmap.c (paint_elev_code, paint_elev_vary): New globals.
	(handle_designer_mouse_down): Set them, call net_paint_elevation
	with new args.
	(paint_on_drag): Similarly.

	* tkmap.c (move_the_selected_unit): Beep if advance_into_cell
	fails.
----------------------------
revision 1.28
date: 2000/07/04 13:40:40;  author: shebs;  state: Exp;  lines: +0 -17
	* side.c, kernel.h (set_mutual_trust): Remove, not used and not
	useful (set_trust is always sufficient).
	* tp.c, kpublic.h (net_set_mutual_trust): Ditto.
	(receive_side_prop): Remove "mutualtrust" packet.
----------------------------
revision 1.27
date: 2000/06/08 12:19:56;  author: shebs;  state: Exp;  lines: +1 -3
	* ai.c, goal.def, module.c, tp.c: Fix dates.
----------------------------
revision 1.26
date: 2000/04/11 15:35:14;  author: shebs;  state: Exp;  lines: +11 -2
	* tp.c (download_game_module): Make sure indepside is filled in.
	(net_resign_game, receive_side_prop): Handle NULL sides when
	resigning.
	* write.c (write_areas): Don't write area size if not yet defined.
	(write_sides): Write indepside data using independent-units form.
	(add_num_or_dice_to_form): Don't write 0 addends.
	(add_form_to_form): Increase buffer from 16K to 50K.
----------------------------
revision 1.25
date: 2000/04/08 14:58:23;  author: ronne;  state: Exp;  lines: +15 -0
Add side->autoresearch option.
----------------------------
revision 1.24
date: 2000/03/05 15:32:48;  author: shebs;  state: Exp;  lines: +15 -25
	* task.def (TASK_BUILD): Add args for location at which to build.
	* task.c (do_build_task): Pass location to create-at action.
	* iplayer.c, mplayer.c, kpublic.h, plan.c, task.c, tp.c,
	ccmd.c, macunit.c, macwins.c, tkcmd.c, xcmd.c: Update all calls.

	* task.def (TASK_DO_ACTION): Remove, never used.
	* task.c (do_action_task): Remove.
	* xcloseup.c: Remove ref.
----------------------------
revision 1.23
date: 2000/02/06 21:54:50;  author: ronne;  state: Exp;  lines: +56 -0
Various mac interface improvements.
----------------------------
revision 1.22
date: 1999/12/08 03:13:10;  author: shebs;  state: Exp;  lines: +75 -151
	* gvar.def (side-can-research): New global.
	* table.def (conversion): New material-material table.
	* utype.def (advanced-auto-construct, advanced-auto-research,
	use-own-cell): New properties.
	* cmd.c (do_research): Use new global, test for more cases.
	* iplayer.c (iplayer_save_state): Removed unneeded code.
	* kpublic.h (net_set_side_research): Declare.
	* nlang.c (UsualDateStepRange): New struct.
	(date_step_ranges): New array, was datesteptype.
	(init_calendar): Handle ranges of turns for date steps.
	(parse_date_step_range): New function.
	(parse_usual_date): Add arg, change all callers.
	(usual_date_string): Search ranges to find right step type.
	* plan.c (execute_plan): Comment out advanced unit escape.
	* run.c (run_advanced_units): Add material conversion step.
	(run_population): Use unit_handle.
	(allocate_used_cells): Make extra cell usage optional, don't
	handle inside search loop.
	* run2.c (run_side_research): Use material consumption.
	* tp.c (net_set_side_research): New function.
	(receive_side_prop): Handle side research packet.
----------------------------
revision 1.21
date: 1999/12/02 03:14:54;  author: shebs;  state: Exp;  lines: +0 -15
	* kernel.h, plan.c, tp.c (reserve_unit): Ditto.
	* kpublic.h, tp.c (net_reserve_unit): Ditto.
----------------------------
revision 1.20
date: 1999/11/18 03:26:16;  author: shebs;  state: Exp;  lines: +2 -0
	* module.c (copy_module): Don't overwrite the module name.
	* tp.c (download_game_module): Clear download module's filename.
----------------------------
revision 1.19
date: 1999/11/16 02:20:23;  author: shebs;  state: Exp;  lines: +3 -6
	* tp.c (download_game_module): Clear module base module name.
	* write.c (write_entire_game_state): Ditto.
----------------------------
revision 1.18
date: 1999/11/10 03:02:08;  author: shebs;  state: Exp;  lines: +2 -21
	* module.h (Module hook, read_only, fill_type): Remove fields,
	never used.
	* module.c (copy_module): New function.
	(create_game_module): Use it instead of random field inits.
	(init_module_reshape): Remove unused setting of fill_type.
	* score.c (get_scores): Display game's title if possible.
	* tp.c (download_game_module): Simplify by using copy_module.
	(DOWNLOADPACKETSIZE): Also use 200 if on Windows.
	* write.c (write_entire_game_state): Simplify module handling.
----------------------------
revision 1.17
date: 1999/09/29 03:05:20;  author: shebs;  state: Exp;  lines: +44 -12
	* tp.c (online, quitter): New globals.
	(for_all_remotes): Only do rids for programs still connected.
	(add_remote_program): Mark new program as online.
	(send_quit): Send rid, ensure packet is sent.
	(receive_quit): Signal that program is not online.
	* unix.c (crash_handler, hup_handler): Use error_save_filename.
	* win32.c: Ditto.
	(ERRORFILE): Define.

	* tkcmd.c (save_the_game): Call exit_xconq.
	* tkconq.tcl: Call exit_xconq to leave.
	* tkmain.c (tk_exit_xconq): New tcl command.
	(check_network): Close connection if quitter nonzero.
	(host_the_game): Mark host as online.
	(exit_xconq): Send a quit message.

	* tp.c (net_run_game): Detect if checksum changes but run_game
 	doesn't do anything.
	(receive_game_checksum): Test for before-run-game checksum.
	* tkmain.c (tk_run_game): Only compare run_local_ai checksum
	if not master.
----------------------------
revision 1.16
date: 1999/09/28 05:02:34;  author: shebs;  state: Exp;  lines: +95 -27
        * tp.c (add_remote_program): Use correct remote player spec.
        (DOWNLOADPACKETSIZE): Increase to 200 if on Unix.
        (add_to_packet): Move to here from write.c, remove rid arg,
        simplify.
        (flush_write): Move to here from write.c.
        (net_run_game): Disable occasional checksum send.
        (send_game_checksum_error): New function.
        (receive_game_checksum): Call it.
        (receive_packet): Add 'E' packet for errors.
        (receive_error): New function.
        (game_checksum): Make externally visible.
        * write.c: Remove tmprid arg in add_to_packet calls.

        * tkconq.tcl (popup_open_dialog): Add arg.
        (popup_game_dialog): Leave b2 button enabled, make it do the
        open dialog.
        (popup_connect): Don't complain about unsupported connection times.
        (join_game): Remove experimental bits.
        (popup_chat): Disable connect button when chat window up.
        (dismiss_chat): Rename from dismiss_pregame_chat, reenable Chat
        button.
        (add_program): Change Connect button to Chat button.
        (insert_chat_string): Enable chat buffer temporarily if necessary
        to insert a string.
        (popup_init_error_dialog, popup_init_warning_dialog, etc): New.
       * tkmain.c (tk_send_variant_value): Always expect 6 args.
        (update_assignment): Don't select player.
        (update_variant_setting): Set values of world size and real times.
        (tk_run_game): Add game checksum tests before/after AI run.
        (host_the_game, init_all_displays, announce_read_progress,
        announce_lengthy_process, etc, low_init_error, low_init_warnings,
        exit_xconq, launch_game, launch_game_2, unit_advance_dialog, etc):
        Move here from xconq.c and wconq.c, adjust to be more generic.

        * wconq.c (main): Clear use_stdio, remove -host/-join handling.
        * xconq.c (main): Set use_stdio initially, move stdout welcome
        so only appears if use command-line args, reorganize handling of
        -host and -join.
----------------------------
revision 1.15
date: 1999/09/24 23:52:47;  author: shebs;  state: Exp;  lines: +76 -15
	* side.h (Side rid): Remove slot, not needed.
	* ai.c: Add some comments.
	(init_ai): Handle networked case correctly.
	* init.c (set_player_advantage, rename_side_for_player,
	set_ai_for_player): New functions.
	(assign_players_to_sides): Remove setting of side->rid, test
	player->rid instead, improve warning message.
	* socket.c: Add some comments.
	(open_remote_connection): Remove dead code in hosting case,
	retry 5 instead of 15 times in joining case.
	(close_remote_connection): Handle arg of 0 usefully.
	* tp.c (init_remote_ui): Set rui->rid from player->rid.
	(net_set_player_advantage): Call set_player_advantage.
	(net_add_side_and_player, net_rename_side_for_player,
 	net_set_ai_for_player): New function.
	(receive_assignment_setting): Add rest of messages, share
	assignment callback use.

	* tkconq.tcl (update_allplayer_buttons): New proc, code to
	adjust buttons that affect all players.
	(add_player_dialog_items, add_player_cmd, select_player): Use it.
	(exchange_players_cmd): Only update if valid return from exchange.
	(join_game): Inform player about result of join attempt.
	* tkmain.c (tk_add_side_and_player, tk_rename_side_for_player,
	tk_set_ai_for_player): Use net_ functions.
	(tk_try_join_game): Return result of try_join_game.
	(try_join_game): Move here from xconq.c & wconq.c, also return
	success or failure.
	(update_assignment): Call update_allplayer_buttons.

	* wconq.c, xconq.c (try_join_game): Remove.
	* xconq.c (host_the_game): Warn about connection failure.
----------------------------
revision 1.14
date: 1999/09/24 23:29:59;  author: ronne;  state: Exp;  lines: +1 -1
Fix bug in receive_variant_setting.
----------------------------
revision 1.13
date: 1999/09/23 02:22:07;  author: shebs;  state: Exp;  lines: +161 -106
	* socket.c (open_remote_connection): Always return something.
	(accept_remote_connection): Use Dprintf for debug output.
	* tp.c (update_variant_callback, update_assignment_callback):
	New globals.
	(net_set_player_advantage, net_exchange_players): New functions.
	(broadcast_variants_chosen): Send vOK instead of just v.
	(broadcast_players_assigned): Similarly.
	(receive_variant_setting, receive_assignment_setting): New.
	(receive_packet): Call them.

	* tkconq.tcl (popup_game_dialog): Make second button disappear.
	(add_variants_dialog_items): Make buttons broadcast variant
 	change.
	(broadcast_variant_value): New proc.
	(world_size_ok_cmd, real_time_ok_cmd): Call it.
	* tkmain.c (tk_send_variant_value): New tcl command.
	(tk_adjust_advantage): Call net_set_player_advantage.
	(tk_exchange_players): Call net_exchange_players.
	(update_variant_setting, update_assignment): New functions.
	(initial_ui_init): Set the callbacks with them.
	(tk_player_remote_status): Remove, no longer needed.
----------------------------
revision 1.12
date: 1999/09/21 02:25:17;  author: shebs;  state: Exp;  lines: +20 -33
	General cleanup of networking support.
	* side.h (side_has_local_display): Move to here from various
	files.
	* tp.h (add_remote_program, etc): Move decls here from tp.c.
	* tp.c (hosting): Define here.
	(download_game_module): Copy over more module properties.
	(receive_packet): Remove L packet.
	(receive_player_prop): Remove "Pyou" packet.
	* mac.c (hosting, connection_method_name): Remove, comment out
	code that uses.
	(open_remote_connection): Add hosting arg, return result.
	(close_remote_connection): Add argument.
	* socket.c: Similarly.
	* macconq.c, macconq.h, macinit.c, tkmain.c, wconq.c, xconq.c,
 	xtconq.c, xtmain.c, cconq.c: Update references.
	* system.h (open_remote_connection): Update decl.
	* skelconq.c, macinit.c, wconq.c, xconq.c, xtconq.c, cconq.c
 	(you_player, set_you_player, add_remote_player, launch_game):
 	Remove, no longer used.
	* wimfapp.c, imf2x.c, x2imf.c, ximfapp.c, xshowimf.c (my_rid,
 	numremotes): Remove, no longer needed.

	* tkmain.c (tk_start_new_game): New tcl command.
	(check_network): Call popup_game_dialog instead of only removing
	splash screen items.

	* wconq.c (host_the_game): Register self as first remote program
	(try_join_game): Send a player spec to host.
	(launch_game_2): New function.
----------------------------
revision 1.11
date: 1999/09/18 00:18:47;  author: shebs;  state: Exp;  lines: +46 -17
	* conq.h (enum setup_stage): Rename stages, add game_load_stage.
	* init.c (make_trial_assignments): Add remote players.
	* system.h (close_remote_connection): Add argument.
	* tp.c (remote_player_specs): New global array.
	(add_remote_players): New function.
	(download_to_player): Comment out launch packet send.
	(download_game_module): Use gameModule instead of GameModule.
	(broadcast_variants_chosen): Send randstate first.
	(receive_packet): Change 'G' packet to 'g', comment out 'L'
	packet, adjust stage names.
	(receive_remote_program): Record remote player spec.

	* tkconq.tcl (popup_game_dialog): Remove Network button.
	(toggle_remote_cmd): Remove.
	(select_player): Remove remote button.
	(popup_chat): Rename from popup_pregame_chat, allow deiconify,
	disable splash dialog buttons when brought up, put both host
	and join buttons at top.
	(my_rid): New global.
	(add_program): Disable connection buttons, activate New/Open
	buttons for host.
	(insert_chat_string): Allow arg of 0 to do generic inserts.
	(create_map_menus): Add chat item to file menu.
	(adjust_file_menu): New proc.
	* tkmain.c (tk_launch_game): Set stage, make trial assignments
	after broadcasting that variants chosen.
	(tk_launch_game_2): Call launch_game_2.
	(check_network): Adjust stage names.

	* xconq.c (main): Simplify startup sequence.
	(host_the_game): Fill in spec of host.
	(launch_game_2): New function.
----------------------------
revision 1.10
date: 1999/09/17 22:11:36;  author: ronne;  state: Exp;  lines: +2 -0
Add missing prototypes.
----------------------------
revision 1.9
date: 1999/09/16 02:47:45;  author: shebs;  state: Exp;  lines: +76 -22
	* conq.h, init.c, module.c, tp.c (typesdefined): Remove, never
 	actually used.

	* conq.h (enum setup_stage): New enum.
	(current_stage): New global.

	* imf.c, imf.h (get_img): Remove unused argument.
	* imf.c, ui.c, xcutil.c, ximf.c, maccolors.c, macimf.c, macinit.c,
 	tkimf.c: Fix all callers.

	* init.c, mac.c, mkrivers.c, mkroads.c, module.c. ps.c, score.c,
 	task.c: Remove PARAMS usages.

	* mac.c, win32.c (tmprid): Remove decl, never used.
	* cconq.c (hosting): Remove decl, never used.

	* tp.c (download_game_module): New function, split out from
	download_to_player.
	(broadcast_game_module): New function.
	(broadcast_variants_chosen, broadcast_players_assigned): New
 	functions.
	(receive_packet): Don't do trial assignments here, interpret
	'a' and 'v' packets.

	* tkconq.tcl (selected_game_title): Init to a default value.
	* tkmain.c (tk_start_new_game): Broadcast game module to other
	programs.
	(tk_launch_game): Broadcast that variants have been chosen.
	(tk_launch_game_2): Broadcast that players have been assigned.
	(last_stage): New global.
	(check_network): Call tcl commands to move dialogs through
	stages of game setup.
----------------------------
revision 1.8
date: 1999/09/09 15:02:54;  author: shebs;  state: Exp;  lines: +97 -36
        Support chat window interaction and >2 network players on Unix.
        * tp.c (broadcast_message): Remove, move into net_send_message.
        (add_remote_program, send_remote_id, net_send_chat): New functions.
        (send_packet): Also wait if hosting, before rids set up.
        (receive_packet): Add c, p, and r packets.
        (receive_chat, receive_remote_program): New functions.
        * unix.c (public_fd, public_fd_valid, remote_fd, fd_valid): New
        globals.
        (open_remote_connection, low_send, wait_for, low_receive,
        close_remote_connection): Rewrite to use them.
        (accept_remote_connection): New function.
        (low_receive): Call it for input from public fd.

        * tkconq.tcl (popup_connect_dialog, etc): Remove.
        (host_game): New proc.
        (popup_pregame_chat): Implement connection functionality at
        top of dialog.
        (add_program): New proc.
        (send_chat_bdg): New proc.
        (insert_chat_string): Rewrite to handle different rids.
        * tkmain.c (tk_try_host_game, tk_send_chat): New functions.
        (check_network): New function.
        (initial_ui_init): Set up to call it.
        (ui_mainloop): Call Tcl_DoOneEvent directly.
        (add_remote_locally, send_chat): New functions.

        * xconq.c: Change function definitions to new style.
        (host_the_game): Call add_remote_locally.
        (try_join_game): Build a default player spec, loop only until
        my_rid is nonzero.

        * skelconq.c, xtconq.c, macconq.c, cconq.c (add_remote_locally,
        send_chat): New functions, dummy versions.
----------------------------
revision 1.7
date: 1999/09/05 17:25:08;  author: ronne;  state: Exp;  lines: +13 -0
Rewrite new ai code. Fix various other bugs.
----------------------------
revision 1.6
date: 1999/08/21 12:16:39;  author: shebs;  state: Exp;  lines: +52 -53
        Eliminate still more warnings.
        * cmd.c, help.c, history.c, mknames.c, mkterr.c, mkunits.c,
        nlang.c, read.c, read2.c, score.c, side.c, supply.c, tp.c, ui.c,
        unit.c, unit.h, world.c, write.c: Remove PARAMS usages, remove
        unused variables, add missing function decls, comment out unused
        functions, etc.
        * obstack.h (obstack_begin): Add parameter types to fn pointer.
        * mknames.c (propose_unit_name): Fix "junky" naming method.
        * read.c (find_unit_spec_by_name, find_unit_spec_by_number):
        Use PARSE_PROPERTY_RETURN instead of PARSE_PROPERTY.
        * score.c (all_sides_draw): Assign result of add_side_to_set.
        * side.c: Include ai.h.
----------------------------
revision 1.5
date: 1999/08/17 12:28:47;  author: shebs;  state: Exp;  lines: +13 -0
        * tp.c (net_set_capture_task): New function.
----------------------------
revision 1.4
date: 1999/07/17 14:35:22;  author: ronne;  state: Exp;  lines: +2 -2
Change fopen to open_file.
----------------------------
revision 1.3
date: 1999/07/03 12:44:09;  author: ronne;  state: Exp;  lines: +0 -4
Clean up file, remove old change markers.
----------------------------
revision 1.2
date: 1999/06/01 19:40:05;  author: shebs;  state: Exp;  lines: +21 -0
Tue Jun  1 18:41:59 1999  Hans Ronne  <ronne@bmc.uu.se>
	* combat.c, conq.h, game.h, help.c, init.c, keyword.def,
 	mkunits.c, move.c, mplayer.c, plan.def, read.c, run.c, run2.c,
 	score.c, side.h, supply.c, table.def, ui.c, unit.c, unit.h,
 	utype.def, world.c, world.h, write.c, maccmd.c, maccolors.c,
 	macconq.h, macdefs.h, macdraw.c, macinit.c. maclist.c, macmap.c,
 	macmenus.c, macmouse.c, macprefs.c, macrow.c. macwins.c: Remove
 	old change markers.
	* actions.c (transfer_supply): Disable use of indepside treasury.
	(do_create_in_action): Make separate call to has_advance_to_build.
	(do_create_in_action): Use the builders stash of cps if allowed.
	(do_create_in_action): Fix null side treasury crashes.
	(check_create_common): Make separate call to has_advance_to_build.
	(check_create_common): Fix null side treasury crashes.
	(set_created_unit_props): Turn on automation for indeps & AI
 	controlled sides.
	(do_create_at_action): Make separate call to has_advance_to_build.
	(do_create_at_action): Use the builders stash of cps if allowed.
	(do_create_at_action): Fix null side treasury crashes.
	(make_unit_complete): Fix null actionvector crashes at turn zero.
	(do_transfer_part_action): Make separate call to
 	has_advance_to_build.
	(check_change_type_action): Add separate call to
 	has_advance_to_build.
	* ai.c (numaitypes): Move to config.h to make it globally
 	accessible.
	(set_side_ai): Turn on automation for indeps & AI controlled
 	sides.
	(ai_update_plan): New function.
	(goal_truth): Handle GOAL_UNIT_OCCUPIED and GOAL_COLONIZE.
	(ai_init_shared): Call set_u_is_ground_mobile etc.
	(ai_init_shared): Set u_colonizer.
	(ai_init_shared): Call set_u_offensive_worth etc.
	(ai_init_shared): Set u_naval_mobile, u_ground_mobile and
 	u_facility.
	(offensive_worth): New function.
	(defensive_worth): New function.
	(exploring_worth): New function.
	(colonizing_worth): New function.
	(facility_worth): New function.
	(siege_worth): New function.
	(random_worth): New function.
	(set_u_offensive_worth): New function.
	(set_u_defensive_worth): New function.
	(set_u_explorer_worth): New function.
	(set_u_colonizer_worth): New function.
	(set_u_facility_worth): New unction.
	(set_u_random_worth): New function.
	(set_u_siege_worth): New function.
	(set_u_is_ground_mobile): New function.
	(set_u_is_naval_mobile): New function.
	(set_u_is_air_mobile): New function.
	(set_u_is_advanced): New function.
	(set_u_is_colonizer): New function.
	(set_u_is_facility): New function.
	* ai.h (a_ai_op): Add (*to_update_plan).
	(ai_update_plan): Prototype new function.
	(offensive_worth, defensive_worth, etc): New prototype.
	* combat.c (do_overrun_action): Make ovverun after fire possible.
	(check_overrun_action): Make overrun after fire & into empty cell
 	possible.
	(do_fire_at_action): Use SideMask code to handle fire display.
	(do_fire_at_action): Permit attempt to capture after fire from
 	adjacent cell.
	(do_fire_into_action): Use SideMask code to handle fire display.
	(maybe_hit_unit): Support uu_cellwide_protection_against.
	(maybe_hit_unit): Support uu_cellwide_protection_for.
	(maybe_hit_unit): Use SideMask code to handle hit display.
	(maybe_hit_unit): Fix occupant recursion bug.
	(attempt_to_capture_unit): Support uu_cellwide_protection_against.
	(attempt_to_capture_unit): Support uu_cellwide_protection_for.
	(detonate_on_cell): Use for_all_stack_with_occs instead of
 	for_all_stack.
	(can_capture_directly): New function.
	(type_can_capture_directly): New function.
	(type_can_carry): New function.
	(occ_can_defend_transport): New function.
	* config.h (MAXATYPES): Increase to 254.
	(numaitypes): Move here from ai.c to make it globally accessible.
	* conq.h (advanced_utypes etc): Remove.
	(numadv etc): Remove.
	(can_extract_at): Prototype.
	(can_load_at): Prototype.
	(can_capture_directly): Prototype.
	(type_can_capture_directly): Prototype.
	(type_can_carry): Prototype.
	(occ_can_defend_transport): Prototype.
	(has_advance_to_build): Prototype.
	(unit_actually_visible): New prototype.
	* game.h (for_all_advanced_utypes, etc): Remove.
	* goal.def (GOAL_UNIT_OCCUPIED, GOAL_COLONIZE): New goals.
	* gvar.def (g_default_runlength): New name for
 	g_ai_build_runlength.
	(g_disable_standard_economy): New gvar.
	(g_disband_unfinished_units): New gvar.
	(g_salvage_unfinished_cps): New gvar.
	(g_salvage_unfinished_materials): New gvar.
	(g_ai_advanced_unit_separation): New gvar.
	(g_ai_badtask_remove_chance): New gvar.
	(g_ai_badtask_max_retries): New gvar.
	(g_ai_badtask_reserve_chance): New gvar.
	(g_units_may_go_into_reserve): New gvar.
	(g_units_may_go_to_sleep): New gvar.
	* help.c (may_detonate): Prototype.
	(describe_utype): Make display of Material Handling conditional.
	(describe_utype): Add "None" option to required advances code.
	(u_property_desc, etc): Add spaces after commas to permit new
 	lines.
	(append_help_phrase): Add more dashes and an extra linefeed.
	* imf.c (interp_image): Disable palette run warning on the Mac.
	* init.c (advanced_utypes etc): Remove.
	(final_init): Remove call to setup_utype_vectors.
	(setup_utype_vectors): Remove function.
	* kernel.h (go_after_captive): New prototype.
	(attack_can_damage_or_capture): New prototype.
	(fire_can_damage_or_capture): New prototype.
	(real_capture_chance): New prototype.
	* keyword.def (K_AUTOPLAN): New keyword.
	(K_CP_STASH): New keyword.
	* kpublic.h (net_resume_build_task): New extern prototype.
	* mac.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	* mkunits.c (make_countries): Add separate call to
 	has_advance_to_build.
	(place_unit): Add separate call to has_advance_to_build.
	* move.c (do_move_action): Fix u2->nu2 typo & remove nu2
 	declaration.
	(do_enter_action): Fix u2->nu2 typo & remove nu2 declaration.
	* mplayer.c: Include kernel.h.
	(assign_to_defend_unit): Prototype new function.
	(assign_to_defend_cell): Prototype new function.
	(assign_to_defend_vicinity): Prototype new function.
	(mplayer_update_plan): Prototype new function.
	(defended_by_occupants): Prototype new function.
	(mplayer_ops): Add mplayer_update_plan.
	(update_unit_plans_randomly): Support g_units_may_go_into_reserve.
	(update_unit_plans_randomly): Support g_units_may_go_to_sleep.
	(mplayer_decide_plan): Skip for advanced units.
	(mplayer_decide_plan): Use u_colonizer_worth instead of
 	u_colonizer.
	(mplayer_update_plan): New function.
	(need_this_type_to_build_explorers): Check that we can build the
 	desired type.
	(assign_to_colonize): Rewrite. Use GOAL_COLONIZE and
 	PLAN_COLONIZING.
	(assign_to_improve): Clear task agenda and set NULL goal.
	(type_can_build_attackers): Check that we can build the desired
 	type.
	(type_can_build_colonizers): Add separate call to
 	has_advance_to_build.
	(type_can_build_colonizers): Use u_colonizer_worth instead of
 	u_colonizer.
	(preferred_build_type): Also count enemy occs by using
 	for_all_stack_with_occs.
	(preferred_build_type): Add separate call to has_advance_to_build.
	(preferred_build_type): Use u_colonizer_worth instead of
 	u_colonizer.
	(defended_by_occupants): New function.
	(assign_to_defense): Rewrite. Handle defense of units.
	(assign_to_defend_unit): New function.
	(assign_to_defend_cell): New function.
	(assign_to_defend_vicinity): New function.
	(assign_to_defend_theater): New function.
	(mplayer_adjust_plan): Skip for advanced units.
	(mplayer_adjust_plan): Add PLAN_COLONIZING & PLAN_IMPROVING.
	(mplayer_adjust_plan): Support g_units_may_go_into_reserve.
	(build_base_for_self): Check that we can build the desired type.
	(build_base_for_others): Check that we can build the desired type.
	(build_depot_for_self): Check that we can build the desired type.
	(rethink_plan): Support g_units_may_go_into_reserve.
	* plan.c: (execute_plan): Skip for advanced units.
	(execute_plan): Mark obsolete try code.
	(execute_plan): Support g_units_may_go_into_reserve.
	(execute_plan): Call ai_update_plan before execution.
	(plan_offense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_offense): Support g_units_may_go_into_reserve.
	(plan_offense): Support g_units_may_go_to_sleep.
	(self_build_base_for_self): Check that we can build the desired
 	type.
	(plan_offense_support): Check that we can build the desired type.
	(plan_defense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_defense): Call go_after_victim also for unit that can fire.
	(plan_defense): Use u_ai_tactical_range.
	(plan_defense): Support g_units_may_go_into_reserve.
	(plan_colonize): Rewrite. Use GOAL_COLONIZE.
	(plan_colonizer_support): Add separate call to
 	has_advance_to_build (2 times).
	(plan_colonizer_support): Use u_colonizer_worth instead of
 	u_colonizer.
 	(plan_improve): Add separate call to has_advance_to_build (2
 	times).
 	(good_cell_to_colonize): Rewrite. Check for presence of other
 	unit.  Check size goal for ALL advanced utypes. Remove check for
 	nearby enemy units.
	(plan_exploration): Support g_units_may_go_into_reserve.
	(plan_exploration): Handle GOAL_UNIT_OCCUPIED and
 	GOAL_CELL_OCCUPIED.
	(plan_exploration): Support g_units_may_go_to_sleep.
	(plan_explorer_support): Check that we can build the desired type.
	(victim_here): Also count with damage by fire and damage to occs.
	(victim_here): Give large size units higher rating.
	(victim_here): Give independent units lower rating.
	(victim_here): Give units that threaten our advanced units higher
 	rating.
	(go_after_captive): New function.
	(target_here): Also count with damage by fire and damage to occs.
	(target_here): Give large size units higher rating.
	(target_here): Give independent units lower rating.
	(target_here): Give units that threaten our advanced units higher
 	rating.
 	(capture_indep_if_nearby): Use u_ai_tactical_range.
 	(capture_useful_if_nearby): Use u_ai_tactical_range.
	* read.c (interp_unit): Restore code where ids start at 1 instead
 	of 0.
	(interp_unit): Add K_CP_STASH & K_AUTOPLAN.
	* run.c (unit_plan_dialog): New extern prototype.
	(net_resume_build_task): New extern prototype.
	(has_advance_to_research): New prototype.
	(select_by_weight): Prototype extern.
	(unit_build_dialog): Change prototype so that it returns int.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove function and prototype.
	(auto_pick_new_plan): New function and prototype.
	(set_new_build_task): Remove function and prototype.
	(run_advanced_units): Enable run_construction for UNIX again.
	(run_population): Fix indepside crashes.
	(run_construction): Completely rewritten & extensively debugged.
	(auto_pick_new_research): Rewrite so that random task is picked.
	(auto_pick_new_build_task): Rewrite. Call auto_pick_new_plan.
	(auto_pick_new_plan): New function.
	* run2.c (vary_winds): Prototype.
	(update_area_display): Prototype extern.
	(run_turn_start): Check g_disable_standard_economy.
	* side.c (update_area_display): Prototype extern.
	(create_side): Fix toggle AI bug by initializing
 	newside->prefixarg.
	(side_controls_unit): Give debuggers full control.
	(side_sees_unit): Include trusted side, debuggers, g_peek_at_enemy
 	and endofgame.
	* side.h (has_advance): Fix null side crashes.
	* table.def (uu_builder_can_reuse_cp): New table.
	(uu_cellwide_protection_against): New table.
	(uu_cellwide_protection_for): New table.
	* task.c (attack_can_damage_or_capture): Move prototype to
 	kernel.h.
	(do_hit_unit_task): Count with fire and capture at pointblank
 	range.
	(do_hit_unit_task): Fix firing range bug.
	(do_hit_unit_task): Move in to capture if unit is undefended.
	(attack_can_damage_or_capture): Do attack if occ can be damaged.
	(fire_can_damage): Do attack if occ can be damaged.
	(fire_can_damage_or_capture):New function.
	(real_capture_chance): New function.
	(execute_task): Support g_ai_badtask_remove_chance.
	(execute_task): Support g_ai_badtask_max_retries.
	(execute_task): Support g_ai_badtask_reserve_chance.
	(execute_task): Support g_units_may_go_into_reserve.
	(set_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(push_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(set_occupy_task): New function.
	* tp.c (net_resume_build_task): New function (prototyped in
 	kpublic.h).
	* ui.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	(xform_cell): Move core calculations to new function
 	xform_cell_flat.
	(xform_cell_flat): New function.
	(xform_cell_fractional_flat): New function.
	(favored_type): Check that we can build the desired type.
	* ui.h (xform_cell_flat, xform_cell_fractional_flat): New
 	prototypes.
	* unit.c (default_size): Change from 0 to 1.
	(has_advance_to_build): Remove prototype.
	(create_unit): Initialize unit->autoplan.
	(create_unit): Initialize unit->cp_stash.
	(can_carry): Check for u_facility_total_max & u_mobile_total_max.
	(type_can_occupy): Check for u_facility_total_max &
 	u_mobile_total_max.
	(type_allowed_on_side): Remove call to has_advance_to_build.
	(set_unit_side): Turn on autobuild & autoresearch if side is under
 	AI control.
	* unit.h (a_unit): Add unit->cp_stash.
	(a_unit): Add unit->autoplan.
	(for_all_occs_with_occs): Define new macro.
	(type_ever_available): Prototype extern.
	* utype.def (u_offensive_worth): New utype property.
	(u_defensive_worth): New utype property.
	(u_explorer_worth): New utype property.
	(u_colonizer_worth): New utype property.
	(u_facility_worth): New utype property.
	(u_random_worth): New utype property.
	(u_siege_worth): New utype property.
	(u_offensive): Change default from 1 to 0.
	(u_explorer): Change default from 1 to 0.
	(u_besieger): New utype property.
	(u_ship): New utype property.
	(u_ground): New utype property.
	(u_air): New utype property.
	(u_facility_total_max): New utype property.
	(u_mobile_total_max): New utype property.
	(u_ai_min_defenders) : Ner utype property.
	(u_ai_tactival_range): New utype property.
	* world.c (latlong_to_xy): Fix meridian drawing bug.
	* world.h (cell_is_within_n_steps): Rename to
 	cell_is_within_range.
	(for_all_cells_within_n_steps): Rename to
 	for_all_cells_within_range.
	(for_all_stack_with_occs): Define new macro.
	* write.c (write_area_users): Change so that nextid starts at 1
 	instead of 0.
	(write_units): Restore old code so that nextid starts at 1 instead
 	of 0.
	(write_unit_properties): Add K_AUTOPLAN & K_CP_STASH.
	* macadv.c: (MAX_DISPLAYED_FACS): New macro constant.
	(MAX_DISPLAYED_OCCS): New macro constant.
	(CLEAR_AGENDA): New macro constant.
	(unit_build_dialog): Change prototype.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove prototype.
	(copy_rect_from_gworld): New function and prototype.
	(city_dialog): Rewrite. Many bug fixes and improvements.
	Most important ones:  Add conditional call to draw_unit_info.
	Use backcolor to draw region outside the area in the city map.
	Use copy_rect_from_gworld to do the offscreen graphics.
	Disable all auto checkboxes when dside is under AI control.
	Check that unit has a plan. Add new Plan Type popup menu.
	Add new Autoplan checkbox. Add new AI control checkbox.
	Split occupant panel into facilities and garrison panels.
	Fix runlength bug and limit it to CLEAR_AGENDA.
	Call net_clear_task_agenda & net_set_unit_asleep for idle units.
	Add separate call to has_advance_to_build.
	(draw_city_statistics): Rewrite. Many bug fixes and improvements.
	Most important ones: Add drawing of unit icon.
	Fix sporadic name bug by call to side_adjective.
	Fix parenthesis bug in construction status field.
	Fix crashing bug in occupant display code.
	Use u_facility_worth instead of !mobile to identify facilities.
	Add AI control info text field.	 Add new facilities and garrison
	panels.
	Fix bugs in construction status.
	Use white background color with unit icons.
	Add cps to occupant names when debugging.
	(draw_landuse_near_unit): Rename macro to for_all_cells_within_range.
	(unit_build_dialog): Rewrite. Many bug fixes. return int instead
	of *unit.
	Add separate call to has_advance_to_build.
	(unit_plan_dialog): New function and prototype.
	(global_advance_dialog): Fix autoresearch bug.
	Fix crashes due to incorrect oldprojects[] array size.
	Move SetPort call to position after conditional return.
	Fix sporadic name bug by two calls to side_adjective.
	* maccmd.c (do_set_view_angle): Only set vertscale if given a
 	valid prefixarg.
	* maccolors.c (default_draw_ai): Initialize to TRUE.
	(alert_256_colors): Initialize to TRUE.
	* macconq.c (main): Move check_screen_depths after get files and
 	make conditional.
	(update_area_display): Prototype extern. Add Side parameter.
	* macconq.h: Include MacWindows.h ifdef NEW_HEADERS, else include
 	Windows.h.
	(a_map): Add map->draw_ai.
	(default_draw_ai): New extern.
	(alert_256_colors): New extern.
	(xform_fractional): Move prototype here.
	(xform_flat): New prototype.
	(xform_fractional_flat): New prototype.
	* macdefs.h: (mPlanTypePopup): New menu.
	(miPlanTypeColonizing): New menu item.
	(miPlanTypeImproving): New menu item.
	(miPlanTypeRandom): New menu item.
	(diPrefsAIRegions): New dialog item.
	(diPrefs256colors): New dialog item.
	(dCity): All dialog items renumbered and renamed.
	(dPlan): New dialog with 3 dialog items.
	* macdraw.c (draw_unit_image): Rewrite. Support sidecolors in
 	closeups etc.
	(draw_unit_image): Restore colors BEFORE calling gray_out_rect (2
 	times).
	(draw_unit_image): Fix emblem bug due to new emblem_position code.
	* maclist.c (create_list): Use GetNewCWindow if hasColorQD.
	(draw_unit_list_entry): Fix task_desc prototype error.
	* macmap.c (xform_fractional): Move prototype to macconq.h.
	(xform_flat): New function.
	(xform_fractional_flat): New function.
	(adjust_latlong_interval): New function and prototype.
	(create_map): Use default_draw_ai.
	(create_map): Call adjust_latlong_interval.
	(set_map_power): Call adjust_latlong_interval.
	(set_map_angle): Compute a suitable vertscale.
	(draw_meridians): Fix sporadic longitude top error.
	(draw_meridians): Call xform_fractional_flat instead of
 	xform_fractional.
	(draw_selections_at): Fix (x,y) bug.
	(draw_selected_unit): Draw enemy units in red.
	(draw_selection_animation): Draw enemy units in red.
	(update_cell): Make DestRect larger to include row below.
	(update_cell): Use UNWRAP_RECT for meridians & feature names.
	* macmenus.c: (all_ai_ops): Prototype extern for use in
 	build_ai_type_menu.
	(query_position_modally): Unselect all selected units outside our
 	control.
	(do_closeup_mi): Prototype extern for use in ctrl-clicking of
 	unit.
	(build_ai_type_menu): Load AIs dynamically to the menu.
	(do_menu_command): Add support for dynamically loaded AIs.
	(do_menu_command): Support PLAN_COLONIZING & PLAN_IMPROVING.
	(apply_to_all_selected): Don't apply to selected units that we
 	don't control.
	(do_closeup_mi): Remove static declaration.
	(adjust_menus): Add support for dynamically loaded AIs.
	(adjust_menus): Don't enable commands for enemy unit closeups.
	(enable_commands_for_unit): Support PLAN_COLONIZING &
 	PLAN_IMPROVING.
	(enable_commands_for_unit): Fix menu number bug that disables More
 	menu items.
	* macmouse.c (do_closeup_mi): Prototype extern for use in
 	ctrl-clicking of unit.
	(do_mouse_down_map_content): Disable move and fire cmds for
 	selected enemy units.
	(do_mouse_down_map_content): Rewrite ctrl-clicking code using
 	side_sees_unit.  Call do_closeup_mi if ctrl-clicking non-advanced
 	unit, else call city_dialog.
	(select_all_units_in_rect): Always permit this if side_sees_unit.
	* macprefs.c (interp_mac_ui_data): Support default_draw_ai &
 	alert_256_colors.
	(ui_update_state): Support default_draw_ai & alert_256_colors.
	(set_preferences): Add case diPrefsAIRegions & diPrefs256colors.
	(set_preferences): Support default_draw_ai & alert_256_colors.
	(add_preferences_topic_items): Support default_draw_ai &
 	alert_256_colors.
	* macrow.c (draw_cliffs): Fix ouside-area crashes.
	(draw_contours): Trigger unwrapping 1 hex from right edge.
	(draw_gridlines): Trigger unwrapping 1 hex from right edge.
	(draw_shorelines): Trigger unwrapping 1 hex from right edge.
	(draw_feature_boundary_simple): Trigger unwrapping 1 hex from
 	right edge.
	* macwins.c (closeupwinwid): Change to 340.
	(init_construction_lists): Add separate call to
 	has_advance_to_build.
	(adjust_construction_controls): Check that we can build the
 	desired type.
	(side_rename_dialog): Fix colorscheme bug.
	(preferred_closeup_size): Add 4 pixels at bottom.
	(draw_unit_closeup): Make sure this is the selected unit on all
 	maps.
	(draw_unit_closeup): Optionally permit peeking at enemy units.
	(draw_unit_closeup): Fix duplicate goal_desc problem.
	(draw_unit_closeup): Align goal_desc and remove flanking junk.
	(draw_unit_closeup): Align task_desc and write "Task".
	(do_mouse_down_unit_closeup): Make sure this is the selected unit
 	on all maps.
	(destroy_unit_closeup): Make sure this is the selected unit on all
 	maps.
	* XconqProj.rsrc: (DITL 803 "City"): Extensively modified.
	(DITL 702 "Preferences Map Items"): Add AI regions checkbox.
	(DITL 704 "Preferences Offscreen Items"): Add recommend 256 colors
 	checkbox.
	(DITL 804 "City Research"): Minor changes.
	(DITL 805 "Global Science"): Minor changes.
	(DITL 807 "City Build"): Minor changes.
	(DITL 808 "City Plan"): New dialog item list.
	(DLOG 808 "City Plan"): New dialog.
	(MENU 206 "AI Types"): Remove static AI items.
	(MENU 249 "Plan Types"): Restore damaged resource. Add 3 new
 	items.
	* Xconq.r: Update from XconqProj.rsrc.
	* xconq.c (unit_build_dialog): Rewrite. Fix argument error.
	(unit_plan_dialog): New function.
----------------------------
revision 1.1
date: 1999/04/28 19:36:34;  author: shebs;  state: Exp;
Initial checkin.
=============================================================================
