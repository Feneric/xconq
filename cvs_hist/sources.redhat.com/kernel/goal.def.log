
RCS file: /cvs/xconq/xconq/kernel/goal.def,v
Working file: goal.def
head: 1.6
branch:
locks: strict
access list:
symbolic names:
	xconq-7_4_1-release: 1.6
	xconq-7_4-branch: 1.6.0.2
	xconq-7_4-branchpoint: 1.6
	xtconq-pre-removal: 1.4
	xconq-7_3_3-release: 1.4
	xconq-7_3_2-release: 1.4
	xconq-7_3_1-release: 1.4
	xconq-7_3-branch: 1.4.0.2
	xconq-7_3-branchpoint: 1.4
keyword substitution: kv
total revisions: 6;	selected revisions: 6
description:
----------------------------
revision 1.6
date: 2000/10/30 16:28:29;  author: shebs;  state: Exp;  lines: +14 -14
	* goal.def (DEF_GOAL): Add a separate display name for each goal.
	* unit.h (GoalDefn): New field display_name.
	* unit.h, ai.c: Update uses of DEF_GOAL.
	* task.def (DEF_TASK): Add a separate display name for each task.
	* unit.h (TaskDefn): New field display_name.
	* kernel.h, kpublic.h, unit.h, task.c: Update uses of DEF_TASK.
	* nlang.c (task_desc): Use display name instead of internal name.
	(goal_desc): Likewise.
	* side.c (standing_order_desc): Likewise.
----------------------------
revision 1.5
date: 2000/10/29 21:10:37;  author: ronne;  state: Exp;  lines: +14 -14
Improve ai planning. More support for combat model 1.
----------------------------
revision 1.4
date: 2000/06/08 12:19:56;  author: shebs;  state: Exp;  lines: +1 -1
	* ai.c, goal.def, module.c, tp.c: Fix dates.
----------------------------
revision 1.3
date: 1999/07/03 12:43:48;  author: ronne;  state: Exp;  lines: +0 -4
Clean up file, remove old change markers.
----------------------------
revision 1.2
date: 1999/06/01 19:39:41;  author: shebs;  state: Exp;  lines: +12 -0
Tue Jun  1 18:41:59 1999  Hans Ronne  <ronne@bmc.uu.se>
	* combat.c, conq.h, game.h, help.c, init.c, keyword.def,
 	mkunits.c, move.c, mplayer.c, plan.def, read.c, run.c, run2.c,
 	score.c, side.h, supply.c, table.def, ui.c, unit.c, unit.h,
 	utype.def, world.c, world.h, write.c, maccmd.c, maccolors.c,
 	macconq.h, macdefs.h, macdraw.c, macinit.c. maclist.c, macmap.c,
 	macmenus.c, macmouse.c, macprefs.c, macrow.c. macwins.c: Remove
 	old change markers.
	* actions.c (transfer_supply): Disable use of indepside treasury.
	(do_create_in_action): Make separate call to has_advance_to_build.
	(do_create_in_action): Use the builders stash of cps if allowed.
	(do_create_in_action): Fix null side treasury crashes.
	(check_create_common): Make separate call to has_advance_to_build.
	(check_create_common): Fix null side treasury crashes.
	(set_created_unit_props): Turn on automation for indeps & AI
 	controlled sides.
	(do_create_at_action): Make separate call to has_advance_to_build.
	(do_create_at_action): Use the builders stash of cps if allowed.
	(do_create_at_action): Fix null side treasury crashes.
	(make_unit_complete): Fix null actionvector crashes at turn zero.
	(do_transfer_part_action): Make separate call to
 	has_advance_to_build.
	(check_change_type_action): Add separate call to
 	has_advance_to_build.
	* ai.c (numaitypes): Move to config.h to make it globally
 	accessible.
	(set_side_ai): Turn on automation for indeps & AI controlled
 	sides.
	(ai_update_plan): New function.
	(goal_truth): Handle GOAL_UNIT_OCCUPIED and GOAL_COLONIZE.
	(ai_init_shared): Call set_u_is_ground_mobile etc.
	(ai_init_shared): Set u_colonizer.
	(ai_init_shared): Call set_u_offensive_worth etc.
	(ai_init_shared): Set u_naval_mobile, u_ground_mobile and
 	u_facility.
	(offensive_worth): New function.
	(defensive_worth): New function.
	(exploring_worth): New function.
	(colonizing_worth): New function.
	(facility_worth): New function.
	(siege_worth): New function.
	(random_worth): New function.
	(set_u_offensive_worth): New function.
	(set_u_defensive_worth): New function.
	(set_u_explorer_worth): New function.
	(set_u_colonizer_worth): New function.
	(set_u_facility_worth): New unction.
	(set_u_random_worth): New function.
	(set_u_siege_worth): New function.
	(set_u_is_ground_mobile): New function.
	(set_u_is_naval_mobile): New function.
	(set_u_is_air_mobile): New function.
	(set_u_is_advanced): New function.
	(set_u_is_colonizer): New function.
	(set_u_is_facility): New function.
	* ai.h (a_ai_op): Add (*to_update_plan).
	(ai_update_plan): Prototype new function.
	(offensive_worth, defensive_worth, etc): New prototype.
	* combat.c (do_overrun_action): Make ovverun after fire possible.
	(check_overrun_action): Make overrun after fire & into empty cell
 	possible.
	(do_fire_at_action): Use SideMask code to handle fire display.
	(do_fire_at_action): Permit attempt to capture after fire from
 	adjacent cell.
	(do_fire_into_action): Use SideMask code to handle fire display.
	(maybe_hit_unit): Support uu_cellwide_protection_against.
	(maybe_hit_unit): Support uu_cellwide_protection_for.
	(maybe_hit_unit): Use SideMask code to handle hit display.
	(maybe_hit_unit): Fix occupant recursion bug.
	(attempt_to_capture_unit): Support uu_cellwide_protection_against.
	(attempt_to_capture_unit): Support uu_cellwide_protection_for.
	(detonate_on_cell): Use for_all_stack_with_occs instead of
 	for_all_stack.
	(can_capture_directly): New function.
	(type_can_capture_directly): New function.
	(type_can_carry): New function.
	(occ_can_defend_transport): New function.
	* config.h (MAXATYPES): Increase to 254.
	(numaitypes): Move here from ai.c to make it globally accessible.
	* conq.h (advanced_utypes etc): Remove.
	(numadv etc): Remove.
	(can_extract_at): Prototype.
	(can_load_at): Prototype.
	(can_capture_directly): Prototype.
	(type_can_capture_directly): Prototype.
	(type_can_carry): Prototype.
	(occ_can_defend_transport): Prototype.
	(has_advance_to_build): Prototype.
	(unit_actually_visible): New prototype.
	* game.h (for_all_advanced_utypes, etc): Remove.
	* goal.def (GOAL_UNIT_OCCUPIED, GOAL_COLONIZE): New goals.
	* gvar.def (g_default_runlength): New name for
 	g_ai_build_runlength.
	(g_disable_standard_economy): New gvar.
	(g_disband_unfinished_units): New gvar.
	(g_salvage_unfinished_cps): New gvar.
	(g_salvage_unfinished_materials): New gvar.
	(g_ai_advanced_unit_separation): New gvar.
	(g_ai_badtask_remove_chance): New gvar.
	(g_ai_badtask_max_retries): New gvar.
	(g_ai_badtask_reserve_chance): New gvar.
	(g_units_may_go_into_reserve): New gvar.
	(g_units_may_go_to_sleep): New gvar.
	* help.c (may_detonate): Prototype.
	(describe_utype): Make display of Material Handling conditional.
	(describe_utype): Add "None" option to required advances code.
	(u_property_desc, etc): Add spaces after commas to permit new
 	lines.
	(append_help_phrase): Add more dashes and an extra linefeed.
	* imf.c (interp_image): Disable palette run warning on the Mac.
	* init.c (advanced_utypes etc): Remove.
	(final_init): Remove call to setup_utype_vectors.
	(setup_utype_vectors): Remove function.
	* kernel.h (go_after_captive): New prototype.
	(attack_can_damage_or_capture): New prototype.
	(fire_can_damage_or_capture): New prototype.
	(real_capture_chance): New prototype.
	* keyword.def (K_AUTOPLAN): New keyword.
	(K_CP_STASH): New keyword.
	* kpublic.h (net_resume_build_task): New extern prototype.
	* mac.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	* mkunits.c (make_countries): Add separate call to
 	has_advance_to_build.
	(place_unit): Add separate call to has_advance_to_build.
	* move.c (do_move_action): Fix u2->nu2 typo & remove nu2
 	declaration.
	(do_enter_action): Fix u2->nu2 typo & remove nu2 declaration.
	* mplayer.c: Include kernel.h.
	(assign_to_defend_unit): Prototype new function.
	(assign_to_defend_cell): Prototype new function.
	(assign_to_defend_vicinity): Prototype new function.
	(mplayer_update_plan): Prototype new function.
	(defended_by_occupants): Prototype new function.
	(mplayer_ops): Add mplayer_update_plan.
	(update_unit_plans_randomly): Support g_units_may_go_into_reserve.
	(update_unit_plans_randomly): Support g_units_may_go_to_sleep.
	(mplayer_decide_plan): Skip for advanced units.
	(mplayer_decide_plan): Use u_colonizer_worth instead of
 	u_colonizer.
	(mplayer_update_plan): New function.
	(need_this_type_to_build_explorers): Check that we can build the
 	desired type.
	(assign_to_colonize): Rewrite. Use GOAL_COLONIZE and
 	PLAN_COLONIZING.
	(assign_to_improve): Clear task agenda and set NULL goal.
	(type_can_build_attackers): Check that we can build the desired
 	type.
	(type_can_build_colonizers): Add separate call to
 	has_advance_to_build.
	(type_can_build_colonizers): Use u_colonizer_worth instead of
 	u_colonizer.
	(preferred_build_type): Also count enemy occs by using
 	for_all_stack_with_occs.
	(preferred_build_type): Add separate call to has_advance_to_build.
	(preferred_build_type): Use u_colonizer_worth instead of
 	u_colonizer.
	(defended_by_occupants): New function.
	(assign_to_defense): Rewrite. Handle defense of units.
	(assign_to_defend_unit): New function.
	(assign_to_defend_cell): New function.
	(assign_to_defend_vicinity): New function.
	(assign_to_defend_theater): New function.
	(mplayer_adjust_plan): Skip for advanced units.
	(mplayer_adjust_plan): Add PLAN_COLONIZING & PLAN_IMPROVING.
	(mplayer_adjust_plan): Support g_units_may_go_into_reserve.
	(build_base_for_self): Check that we can build the desired type.
	(build_base_for_others): Check that we can build the desired type.
	(build_depot_for_self): Check that we can build the desired type.
	(rethink_plan): Support g_units_may_go_into_reserve.
	* plan.c: (execute_plan): Skip for advanced units.
	(execute_plan): Mark obsolete try code.
	(execute_plan): Support g_units_may_go_into_reserve.
	(execute_plan): Call ai_update_plan before execution.
	(plan_offense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_offense): Support g_units_may_go_into_reserve.
	(plan_offense): Support g_units_may_go_to_sleep.
	(self_build_base_for_self): Check that we can build the desired
 	type.
	(plan_offense_support): Check that we can build the desired type.
	(plan_defense): Handle GOAL_UNIT_OCCUPIED and GOAL_CELL_OCCUPIED.
	(plan_defense): Call go_after_victim also for unit that can fire.
	(plan_defense): Use u_ai_tactical_range.
	(plan_defense): Support g_units_may_go_into_reserve.
	(plan_colonize): Rewrite. Use GOAL_COLONIZE.
	(plan_colonizer_support): Add separate call to
 	has_advance_to_build (2 times).
	(plan_colonizer_support): Use u_colonizer_worth instead of
 	u_colonizer.
 	(plan_improve): Add separate call to has_advance_to_build (2
 	times).
 	(good_cell_to_colonize): Rewrite. Check for presence of other
 	unit.  Check size goal for ALL advanced utypes. Remove check for
 	nearby enemy units.
	(plan_exploration): Support g_units_may_go_into_reserve.
	(plan_exploration): Handle GOAL_UNIT_OCCUPIED and
 	GOAL_CELL_OCCUPIED.
	(plan_exploration): Support g_units_may_go_to_sleep.
	(plan_explorer_support): Check that we can build the desired type.
	(victim_here): Also count with damage by fire and damage to occs.
	(victim_here): Give large size units higher rating.
	(victim_here): Give independent units lower rating.
	(victim_here): Give units that threaten our advanced units higher
 	rating.
	(go_after_captive): New function.
	(target_here): Also count with damage by fire and damage to occs.
	(target_here): Give large size units higher rating.
	(target_here): Give independent units lower rating.
	(target_here): Give units that threaten our advanced units higher
 	rating.
 	(capture_indep_if_nearby): Use u_ai_tactical_range.
 	(capture_useful_if_nearby): Use u_ai_tactical_range.
	* read.c (interp_unit): Restore code where ids start at 1 instead
 	of 0.
	(interp_unit): Add K_CP_STASH & K_AUTOPLAN.
	* run.c (unit_plan_dialog): New extern prototype.
	(net_resume_build_task): New extern prototype.
	(has_advance_to_research): New prototype.
	(select_by_weight): Prototype extern.
	(unit_build_dialog): Change prototype so that it returns int.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove function and prototype.
	(auto_pick_new_plan): New function and prototype.
	(set_new_build_task): Remove function and prototype.
	(run_advanced_units): Enable run_construction for UNIX again.
	(run_population): Fix indepside crashes.
	(run_construction): Completely rewritten & extensively debugged.
	(auto_pick_new_research): Rewrite so that random task is picked.
	(auto_pick_new_build_task): Rewrite. Call auto_pick_new_plan.
	(auto_pick_new_plan): New function.
	* run2.c (vary_winds): Prototype.
	(update_area_display): Prototype extern.
	(run_turn_start): Check g_disable_standard_economy.
	* side.c (update_area_display): Prototype extern.
	(create_side): Fix toggle AI bug by initializing
 	newside->prefixarg.
	(side_controls_unit): Give debuggers full control.
	(side_sees_unit): Include trusted side, debuggers, g_peek_at_enemy
 	and endofgame.
	* side.h (has_advance): Fix null side crashes.
	* table.def (uu_builder_can_reuse_cp): New table.
	(uu_cellwide_protection_against): New table.
	(uu_cellwide_protection_for): New table.
	* task.c (attack_can_damage_or_capture): Move prototype to
 	kernel.h.
	(do_hit_unit_task): Count with fire and capture at pointblank
 	range.
	(do_hit_unit_task): Fix firing range bug.
	(do_hit_unit_task): Move in to capture if unit is undefended.
	(attack_can_damage_or_capture): Do attack if occ can be damaged.
	(fire_can_damage): Do attack if occ can be damaged.
	(fire_can_damage_or_capture):New function.
	(real_capture_chance): New function.
	(execute_task): Support g_ai_badtask_remove_chance.
	(execute_task): Support g_ai_badtask_max_retries.
	(execute_task): Support g_ai_badtask_reserve_chance.
	(execute_task): Support g_units_may_go_into_reserve.
	(set_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(push_build_task): Rewrite. Optionally disband any salvage
 	unfinished unit.
	(set_occupy_task): New function.
	* tp.c (net_resume_build_task): New function (prototyped in
 	kpublic.h).
	* ui.c: Include MacTypes.h ifdef NEW_HEADERS, else include
 	Types.h.
	(xform_cell): Move core calculations to new function
 	xform_cell_flat.
	(xform_cell_flat): New function.
	(xform_cell_fractional_flat): New function.
	(favored_type): Check that we can build the desired type.
	* ui.h (xform_cell_flat, xform_cell_fractional_flat): New
 	prototypes.
	* unit.c (default_size): Change from 0 to 1.
	(has_advance_to_build): Remove prototype.
	(create_unit): Initialize unit->autoplan.
	(create_unit): Initialize unit->cp_stash.
	(can_carry): Check for u_facility_total_max & u_mobile_total_max.
	(type_can_occupy): Check for u_facility_total_max &
 	u_mobile_total_max.
	(type_allowed_on_side): Remove call to has_advance_to_build.
	(set_unit_side): Turn on autobuild & autoresearch if side is under
 	AI control.
	* unit.h (a_unit): Add unit->cp_stash.
	(a_unit): Add unit->autoplan.
	(for_all_occs_with_occs): Define new macro.
	(type_ever_available): Prototype extern.
	* utype.def (u_offensive_worth): New utype property.
	(u_defensive_worth): New utype property.
	(u_explorer_worth): New utype property.
	(u_colonizer_worth): New utype property.
	(u_facility_worth): New utype property.
	(u_random_worth): New utype property.
	(u_siege_worth): New utype property.
	(u_offensive): Change default from 1 to 0.
	(u_explorer): Change default from 1 to 0.
	(u_besieger): New utype property.
	(u_ship): New utype property.
	(u_ground): New utype property.
	(u_air): New utype property.
	(u_facility_total_max): New utype property.
	(u_mobile_total_max): New utype property.
	(u_ai_min_defenders) : Ner utype property.
	(u_ai_tactival_range): New utype property.
	* world.c (latlong_to_xy): Fix meridian drawing bug.
	* world.h (cell_is_within_n_steps): Rename to
 	cell_is_within_range.
	(for_all_cells_within_n_steps): Rename to
 	for_all_cells_within_range.
	(for_all_stack_with_occs): Define new macro.
	* write.c (write_area_users): Change so that nextid starts at 1
 	instead of 0.
	(write_units): Restore old code so that nextid starts at 1 instead
 	of 0.
	(write_unit_properties): Add K_AUTOPLAN & K_CP_STASH.
	* macadv.c: (MAX_DISPLAYED_FACS): New macro constant.
	(MAX_DISPLAYED_OCCS): New macro constant.
	(CLEAR_AGENDA): New macro constant.
	(unit_build_dialog): Change prototype.
	(has_advance_to_build): Remove prototype.
	(create_selected_unit): Remove prototype.
	(copy_rect_from_gworld): New function and prototype.
	(city_dialog): Rewrite. Many bug fixes and improvements.
	Most important ones:  Add conditional call to draw_unit_info.
	Use backcolor to draw region outside the area in the city map.
	Use copy_rect_from_gworld to do the offscreen graphics.
	Disable all auto checkboxes when dside is under AI control.
	Check that unit has a plan. Add new Plan Type popup menu.
	Add new Autoplan checkbox. Add new AI control checkbox.
	Split occupant panel into facilities and garrison panels.
	Fix runlength bug and limit it to CLEAR_AGENDA.
	Call net_clear_task_agenda & net_set_unit_asleep for idle units.
	Add separate call to has_advance_to_build.
	(draw_city_statistics): Rewrite. Many bug fixes and improvements.
	Most important ones: Add drawing of unit icon.
	Fix sporadic name bug by call to side_adjective.
	Fix parenthesis bug in construction status field.
	Fix crashing bug in occupant display code.
	Use u_facility_worth instead of !mobile to identify facilities.
	Add AI control info text field.	 Add new facilities and garrison
	panels.
	Fix bugs in construction status.
	Use white background color with unit icons.
	Add cps to occupant names when debugging.
	(draw_landuse_near_unit): Rename macro to for_all_cells_within_range.
	(unit_build_dialog): Rewrite. Many bug fixes. return int instead
	of *unit.
	Add separate call to has_advance_to_build.
	(unit_plan_dialog): New function and prototype.
	(global_advance_dialog): Fix autoresearch bug.
	Fix crashes due to incorrect oldprojects[] array size.
	Move SetPort call to position after conditional return.
	Fix sporadic name bug by two calls to side_adjective.
	* maccmd.c (do_set_view_angle): Only set vertscale if given a
 	valid prefixarg.
	* maccolors.c (default_draw_ai): Initialize to TRUE.
	(alert_256_colors): Initialize to TRUE.
	* macconq.c (main): Move check_screen_depths after get files and
 	make conditional.
	(update_area_display): Prototype extern. Add Side parameter.
	* macconq.h: Include MacWindows.h ifdef NEW_HEADERS, else include
 	Windows.h.
	(a_map): Add map->draw_ai.
	(default_draw_ai): New extern.
	(alert_256_colors): New extern.
	(xform_fractional): Move prototype here.
	(xform_flat): New prototype.
	(xform_fractional_flat): New prototype.
	* macdefs.h: (mPlanTypePopup): New menu.
	(miPlanTypeColonizing): New menu item.
	(miPlanTypeImproving): New menu item.
	(miPlanTypeRandom): New menu item.
	(diPrefsAIRegions): New dialog item.
	(diPrefs256colors): New dialog item.
	(dCity): All dialog items renumbered and renamed.
	(dPlan): New dialog with 3 dialog items.
	* macdraw.c (draw_unit_image): Rewrite. Support sidecolors in
 	closeups etc.
	(draw_unit_image): Restore colors BEFORE calling gray_out_rect (2
 	times).
	(draw_unit_image): Fix emblem bug due to new emblem_position code.
	* maclist.c (create_list): Use GetNewCWindow if hasColorQD.
	(draw_unit_list_entry): Fix task_desc prototype error.
	* macmap.c (xform_fractional): Move prototype to macconq.h.
	(xform_flat): New function.
	(xform_fractional_flat): New function.
	(adjust_latlong_interval): New function and prototype.
	(create_map): Use default_draw_ai.
	(create_map): Call adjust_latlong_interval.
	(set_map_power): Call adjust_latlong_interval.
	(set_map_angle): Compute a suitable vertscale.
	(draw_meridians): Fix sporadic longitude top error.
	(draw_meridians): Call xform_fractional_flat instead of
 	xform_fractional.
	(draw_selections_at): Fix (x,y) bug.
	(draw_selected_unit): Draw enemy units in red.
	(draw_selection_animation): Draw enemy units in red.
	(update_cell): Make DestRect larger to include row below.
	(update_cell): Use UNWRAP_RECT for meridians & feature names.
	* macmenus.c: (all_ai_ops): Prototype extern for use in
 	build_ai_type_menu.
	(query_position_modally): Unselect all selected units outside our
 	control.
	(do_closeup_mi): Prototype extern for use in ctrl-clicking of
 	unit.
	(build_ai_type_menu): Load AIs dynamically to the menu.
	(do_menu_command): Add support for dynamically loaded AIs.
	(do_menu_command): Support PLAN_COLONIZING & PLAN_IMPROVING.
	(apply_to_all_selected): Don't apply to selected units that we
 	don't control.
	(do_closeup_mi): Remove static declaration.
	(adjust_menus): Add support for dynamically loaded AIs.
	(adjust_menus): Don't enable commands for enemy unit closeups.
	(enable_commands_for_unit): Support PLAN_COLONIZING &
 	PLAN_IMPROVING.
	(enable_commands_for_unit): Fix menu number bug that disables More
 	menu items.
	* macmouse.c (do_closeup_mi): Prototype extern for use in
 	ctrl-clicking of unit.
	(do_mouse_down_map_content): Disable move and fire cmds for
 	selected enemy units.
	(do_mouse_down_map_content): Rewrite ctrl-clicking code using
 	side_sees_unit.  Call do_closeup_mi if ctrl-clicking non-advanced
 	unit, else call city_dialog.
	(select_all_units_in_rect): Always permit this if side_sees_unit.
	* macprefs.c (interp_mac_ui_data): Support default_draw_ai &
 	alert_256_colors.
	(ui_update_state): Support default_draw_ai & alert_256_colors.
	(set_preferences): Add case diPrefsAIRegions & diPrefs256colors.
	(set_preferences): Support default_draw_ai & alert_256_colors.
	(add_preferences_topic_items): Support default_draw_ai &
 	alert_256_colors.
	* macrow.c (draw_cliffs): Fix ouside-area crashes.
	(draw_contours): Trigger unwrapping 1 hex from right edge.
	(draw_gridlines): Trigger unwrapping 1 hex from right edge.
	(draw_shorelines): Trigger unwrapping 1 hex from right edge.
	(draw_feature_boundary_simple): Trigger unwrapping 1 hex from
 	right edge.
	* macwins.c (closeupwinwid): Change to 340.
	(init_construction_lists): Add separate call to
 	has_advance_to_build.
	(adjust_construction_controls): Check that we can build the
 	desired type.
	(side_rename_dialog): Fix colorscheme bug.
	(preferred_closeup_size): Add 4 pixels at bottom.
	(draw_unit_closeup): Make sure this is the selected unit on all
 	maps.
	(draw_unit_closeup): Optionally permit peeking at enemy units.
	(draw_unit_closeup): Fix duplicate goal_desc problem.
	(draw_unit_closeup): Align goal_desc and remove flanking junk.
	(draw_unit_closeup): Align task_desc and write "Task".
	(do_mouse_down_unit_closeup): Make sure this is the selected unit
 	on all maps.
	(destroy_unit_closeup): Make sure this is the selected unit on all
 	maps.
	* XconqProj.rsrc: (DITL 803 "City"): Extensively modified.
	(DITL 702 "Preferences Map Items"): Add AI regions checkbox.
	(DITL 704 "Preferences Offscreen Items"): Add recommend 256 colors
 	checkbox.
	(DITL 804 "City Research"): Minor changes.
	(DITL 805 "Global Science"): Minor changes.
	(DITL 807 "City Build"): Minor changes.
	(DITL 808 "City Plan"): New dialog item list.
	(DLOG 808 "City Plan"): New dialog.
	(MENU 206 "AI Types"): Remove static AI items.
	(MENU 249 "Plan Types"): Restore damaged resource. Add 3 new
 	items.
	* Xconq.r: Update from XconqProj.rsrc.
	* xconq.c (unit_build_dialog): Rewrite. Fix argument error.
	(unit_plan_dialog): New function.
----------------------------
revision 1.1
date: 1999/04/28 19:36:24;  author: shebs;  state: Exp;
Initial checkin.
=============================================================================
